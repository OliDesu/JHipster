<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="181" failures="0" time="241.77">
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:02:30" time="46.335" tests="13">
    <testcase classname="Service Tests Account Service authenticate authenticationState should emit null if input is null" name="Service Tests Account Service authenticate authenticationState should emit null if input is null" time="0.127">
    </testcase>
    <testcase classname="Service Tests Account Service authenticate authenticationState should emit the same account as was in input parameter" name="Service Tests Account Service authenticate authenticationState should emit the same account as was in input parameter" time="0.01">
    </testcase>
    <testcase classname="Service Tests Account Service identity should call /account if user is undefined" name="Service Tests Account Service identity should call /account if user is undefined" time="0.01">
    </testcase>
    <testcase classname="Service Tests Account Service identity should call /account only once if not logged out after first authentication and should call /account again if user has logged out" name="Service Tests Account Service identity should call /account only once if not logged out after first authentication and should call /account again if user has logged out" time="0.009">
    </testcase>
    <testcase classname="Service Tests Account Service identity navigateToStoredUrl should navigate to the previous stored url post successful authentication" name="Service Tests Account Service identity navigateToStoredUrl should navigate to the previous stored url post successful authentication" time="0.01">
    </testcase>
    <testcase classname="Service Tests Account Service identity navigateToStoredUrl should not navigate to the previous stored url when authentication fails" name="Service Tests Account Service identity navigateToStoredUrl should not navigate to the previous stored url when authentication fails" time="0.009">
    </testcase>
    <testcase classname="Service Tests Account Service identity navigateToStoredUrl should not navigate to the previous stored url when no such url exists post successful authentication" name="Service Tests Account Service identity navigateToStoredUrl should not navigate to the previous stored url when no such url exists post successful authentication" time="0.017">
    </testcase>
    <testcase classname="Service Tests Account Service hasAnyAuthority hasAnyAuthority string parameter should return false if user is not logged" name="Service Tests Account Service hasAnyAuthority hasAnyAuthority string parameter should return false if user is not logged" time="0.007">
    </testcase>
    <testcase classname="Service Tests Account Service hasAnyAuthority hasAnyAuthority string parameter should return false if user is logged and has not authority" name="Service Tests Account Service hasAnyAuthority hasAnyAuthority string parameter should return false if user is logged and has not authority" time="0.008">
    </testcase>
    <testcase classname="Service Tests Account Service hasAnyAuthority hasAnyAuthority string parameter should return true if user is logged and has authority" name="Service Tests Account Service hasAnyAuthority hasAnyAuthority string parameter should return true if user is logged and has authority" time="0.011">
    </testcase>
    <testcase classname="Service Tests Account Service hasAnyAuthority hasAnyAuthority array parameter should return false if user is not logged" name="Service Tests Account Service hasAnyAuthority hasAnyAuthority array parameter should return false if user is not logged" time="0.011">
    </testcase>
    <testcase classname="Service Tests Account Service hasAnyAuthority hasAnyAuthority array parameter should return false if user is logged and has not authority" name="Service Tests Account Service hasAnyAuthority hasAnyAuthority array parameter should return false if user is logged and has not authority" time="0.006">
    </testcase>
    <testcase classname="Service Tests Account Service hasAnyAuthority hasAnyAuthority array parameter should return true if user is logged and has authority" name="Service Tests Account Service hasAnyAuthority hasAnyAuthority array parameter should return true if user is logged and has authority" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:02:29" time="48.425" tests="10">
    <testcase classname="Component Tests MainComponent page title navigation end should set page title to default title if pageTitle is missing on routes" name="Component Tests MainComponent page title navigation end should set page title to default title if pageTitle is missing on routes" time="0.112">
    </testcase>
    <testcase classname="Component Tests MainComponent page title navigation end should set page title to root route pageTitle if there is no child routes" name="Component Tests MainComponent page title navigation end should set page title to root route pageTitle if there is no child routes" time="0.038">
    </testcase>
    <testcase classname="Component Tests MainComponent page title navigation end should set page title to child route pageTitle if child routes exist and pageTitle is set for child route" name="Component Tests MainComponent page title navigation end should set page title to child route pageTitle if child routes exist and pageTitle is set for child route" time="0.026">
    </testcase>
    <testcase classname="Component Tests MainComponent page title navigation end should set page title to parent route pageTitle if child routes exists but pageTitle is not set for child route data" name="Component Tests MainComponent page title navigation end should set page title to parent route pageTitle if child routes exists but pageTitle is not set for child route data" time="0.025">
    </testcase>
    <testcase classname="Component Tests MainComponent page title navigation end should set page title to parent route pageTitle if child routes exists but data is not set for child route" name="Component Tests MainComponent page title navigation end should set page title to parent route pageTitle if child routes exists but data is not set for child route" time="0.026">
    </testcase>
    <testcase classname="Component Tests MainComponent page title language change should set page title to default title if pageTitle is missing on routes" name="Component Tests MainComponent page title language change should set page title to default title if pageTitle is missing on routes" time="0.023">
    </testcase>
    <testcase classname="Component Tests MainComponent page title language change should set page title to root route pageTitle if there is no child routes" name="Component Tests MainComponent page title language change should set page title to root route pageTitle if there is no child routes" time="0.153">
    </testcase>
    <testcase classname="Component Tests MainComponent page title language change should set page title to child route pageTitle if child routes exist and pageTitle is set for child route" name="Component Tests MainComponent page title language change should set page title to child route pageTitle if child routes exist and pageTitle is set for child route" time="0.161">
    </testcase>
    <testcase classname="Component Tests MainComponent page title language change should set page title to parent route pageTitle if child routes exists but pageTitle is not set for child route data" name="Component Tests MainComponent page title language change should set page title to parent route pageTitle if child routes exists but pageTitle is not set for child route data" time="0.121">
    </testcase>
    <testcase classname="Component Tests MainComponent page title language change should set page title to parent route pageTitle if child routes exists but data is not set for child route" name="Component Tests MainComponent page title language change should set page title to parent route pageTitle if child routes exists but data is not set for child route" time="0.133">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:17" time="6.088" tests="14">
    <testcase classname="Component Tests AuditsComponent today function should set toDate to current date" name="Component Tests AuditsComponent today function should set toDate to current date" time="0.08">
    </testcase>
    <testcase classname="Component Tests AuditsComponent today function if current day is last day of month then should set toDate to first day of next month" name="Component Tests AuditsComponent today function if current day is last day of month then should set toDate to first day of next month" time="0.03">
    </testcase>
    <testcase classname="Component Tests AuditsComponent today function if current day is not last day of month then should set toDate to next day of current month" name="Component Tests AuditsComponent today function if current day is not last day of month then should set toDate to next day of current month" time="0.023">
    </testcase>
    <testcase classname="Component Tests AuditsComponent previousMonth function should set fromDate to previous month" name="Component Tests AuditsComponent previousMonth function should set fromDate to previous month" time="0.024">
    </testcase>
    <testcase classname="Component Tests AuditsComponent previousMonth function if current month is January then should set fromDate to previous year last month" name="Component Tests AuditsComponent previousMonth function if current month is January then should set fromDate to previous year last month" time="0.026">
    </testcase>
    <testcase classname="Component Tests AuditsComponent previousMonth function if current month is not January then should set fromDate to current year previous month" name="Component Tests AuditsComponent previousMonth function if current month is not January then should set fromDate to current year previous month" time="0.013">
    </testcase>
    <testcase classname="Component Tests AuditsComponent By default, on init should set all default values correctly" name="Component Tests AuditsComponent By default, on init should set all default values correctly" time="0.022">
    </testcase>
    <testcase classname="Component Tests AuditsComponent OnInit Should call load all on init" name="Component Tests AuditsComponent OnInit Should call load all on init" time="0.025">
    </testcase>
    <testcase classname="Component Tests AuditsComponent Create sort object Should sort only by id asc" name="Component Tests AuditsComponent Create sort object Should sort only by id asc" time="0.021">
    </testcase>
    <testcase classname="Component Tests AuditsComponent Create sort object Should sort by timestamp asc then by id" name="Component Tests AuditsComponent Create sort object Should sort by timestamp asc then by id" time="0.033">
    </testcase>
    <testcase classname="Component Tests AuditsComponent loadPage Should not reload page already shown" name="Component Tests AuditsComponent loadPage Should not reload page already shown" time="0.016">
    </testcase>
    <testcase classname="Component Tests AuditsComponent loadPage Should load new page" name="Component Tests AuditsComponent loadPage Should load new page" time="0.017">
    </testcase>
    <testcase classname="Component Tests AuditsComponent transition Should not query data if fromDate and toDate are empty" name="Component Tests AuditsComponent transition Should not query data if fromDate and toDate are empty" time="0.018">
    </testcase>
    <testcase classname="Component Tests AuditsComponent transition Should query data if fromDate and toDate are not empty" name="Component Tests AuditsComponent transition Should query data if fromDate and toDate are not empty" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:23" time="1.288" tests="5">
    <testcase classname="Component Tests RegisterComponent should ensure the two passwords entered match" name="Component Tests RegisterComponent should ensure the two passwords entered match" time="0.021">
    </testcase>
    <testcase classname="Component Tests RegisterComponent should update success to true after creating an account" name="Component Tests RegisterComponent should update success to true after creating an account" time="0.016">
    </testcase>
    <testcase classname="Component Tests RegisterComponent should notify of user existence upon 400/login already in use" name="Component Tests RegisterComponent should notify of user existence upon 400/login already in use" time="0.013">
    </testcase>
    <testcase classname="Component Tests RegisterComponent should notify of email existence upon 400/email address already in use" name="Component Tests RegisterComponent should notify of email existence upon 400/email address already in use" time="0.02">
    </testcase>
    <testcase classname="Component Tests RegisterComponent should notify of generic error" name="Component Tests RegisterComponent should notify of generic error" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:18" time="6.216" tests="7">
    <testcase classname="Component Tests Alert Error Component Error Handling Should display an alert on status 0" name="Component Tests Alert Error Component Error Handling Should display an alert on status 0" time="0.058">
    </testcase>
    <testcase classname="Component Tests Alert Error Component Error Handling Should display an alert on status 404" name="Component Tests Alert Error Component Error Handling Should display an alert on status 404" time="0.031">
    </testcase>
    <testcase classname="Component Tests Alert Error Component Error Handling Should display an alert on generic error" name="Component Tests Alert Error Component Error Handling Should display an alert on generic error" time="0.029">
    </testcase>
    <testcase classname="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for generic error" name="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for generic error" time="0.033">
    </testcase>
    <testcase classname="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for generic error without message" name="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for generic error without message" time="0.02">
    </testcase>
    <testcase classname="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for invalid parameters" name="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for invalid parameters" time="0.016">
    </testcase>
    <testcase classname="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for error headers" name="Component Tests Alert Error Component Error Handling Should display an alert on status 400 for error headers" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:24" time="0.923" tests="4">
    <testcase classname="Component Tests LoginComponent should authenticate the user" name="Component Tests LoginComponent should authenticate the user" time="0.036">
    </testcase>
    <testcase classname="Component Tests LoginComponent should empty the credentials upon cancel" name="Component Tests LoginComponent should empty the credentials upon cancel" time="0.023">
    </testcase>
    <testcase classname="Component Tests LoginComponent should redirect user when register" name="Component Tests LoginComponent should redirect user when register" time="0.017">
    </testcase>
    <testcase classname="Component Tests LoginComponent should redirect user when request password" name="Component Tests LoginComponent should redirect user when request password" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:24" time="1.93" tests="5">
    <testcase classname="Service Tests Course Service Service methods should find an element" name="Service Tests Course Service Service methods should find an element" time="0.013">
    </testcase>
    <testcase classname="Service Tests Course Service Service methods should create a Course" name="Service Tests Course Service Service methods should create a Course" time="0.044">
    </testcase>
    <testcase classname="Service Tests Course Service Service methods should update a Course" name="Service Tests Course Service Service methods should update a Course" time="0.017">
    </testcase>
    <testcase classname="Service Tests Course Service Service methods should return a list of Course" name="Service Tests Course Service Service methods should return a list of Course" time="0.012">
    </testcase>
    <testcase classname="Service Tests Course Service Service methods should delete a Course" name="Service Tests Course Service Service methods should delete a Course" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:25" time="1.029" tests="5">
    <testcase classname="Service Tests Product Service Service methods should find an element" name="Service Tests Product Service Service methods should find an element" time="0.015">
    </testcase>
    <testcase classname="Service Tests Product Service Service methods should create a Product" name="Service Tests Product Service Service methods should create a Product" time="0.051">
    </testcase>
    <testcase classname="Service Tests Product Service Service methods should update a Product" name="Service Tests Product Service Service methods should update a Product" time="0.009">
    </testcase>
    <testcase classname="Service Tests Product Service Service methods should return a list of Product" name="Service Tests Product Service Service methods should return a list of Product" time="0.007">
    </testcase>
    <testcase classname="Service Tests Product Service Service methods should delete a Product" name="Service Tests Product Service Service methods should delete a Product" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:26" time="0.876" tests="5">
    <testcase classname="Service Tests Cooperative Service Service methods should find an element" name="Service Tests Cooperative Service Service methods should find an element" time="0.024">
    </testcase>
    <testcase classname="Service Tests Cooperative Service Service methods should create a Cooperative" name="Service Tests Cooperative Service Service methods should create a Cooperative" time="0.016">
    </testcase>
    <testcase classname="Service Tests Cooperative Service Service methods should update a Cooperative" name="Service Tests Cooperative Service Service methods should update a Cooperative" time="0.014">
    </testcase>
    <testcase classname="Service Tests Cooperative Service Service methods should return a list of Cooperative" name="Service Tests Cooperative Service Service methods should return a list of Cooperative" time="0.014">
    </testcase>
    <testcase classname="Service Tests Cooperative Service Service methods should delete a Cooperative" name="Service Tests Cooperative Service Service methods should delete a Cooperative" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:26" time="1.595" tests="5">
    <testcase classname="Service Tests Restaurant Service Service methods should find an element" name="Service Tests Restaurant Service Service methods should find an element" time="0.011">
    </testcase>
    <testcase classname="Service Tests Restaurant Service Service methods should create a Restaurant" name="Service Tests Restaurant Service Service methods should create a Restaurant" time="0.009">
    </testcase>
    <testcase classname="Service Tests Restaurant Service Service methods should update a Restaurant" name="Service Tests Restaurant Service Service methods should update a Restaurant" time="0.008">
    </testcase>
    <testcase classname="Service Tests Restaurant Service Service methods should return a list of Restaurant" name="Service Tests Restaurant Service Service methods should return a list of Restaurant" time="0.012">
    </testcase>
    <testcase classname="Service Tests Restaurant Service Service methods should delete a Restaurant" name="Service Tests Restaurant Service Service methods should delete a Restaurant" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:27" time="1.63" tests="3">
    <testcase classname="Component Tests User Management Update Component OnInit Should load authorities and language on init" name="Component Tests User Management Update Component OnInit Should load authorities and language on init" time="0.021">
    </testcase>
    <testcase classname="Component Tests User Management Update Component save Should call update service on save for existing user" name="Component Tests User Management Update Component save Should call update service on save for existing user" time="0.019">
    </testcase>
    <testcase classname="Component Tests User Management Update Component save Should call create service on save for new user" name="Component Tests User Management Update Component save Should call create service on save for new user" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:28" time="1.427" tests="5">
    <testcase classname="Service Tests Basket Service Service methods should find an element" name="Service Tests Basket Service Service methods should find an element" time="0.168">
    </testcase>
    <testcase classname="Service Tests Basket Service Service methods should create a Basket" name="Service Tests Basket Service Service methods should create a Basket" time="0.13">
    </testcase>
    <testcase classname="Service Tests Basket Service Service methods should update a Basket" name="Service Tests Basket Service Service methods should update a Basket" time="0.084">
    </testcase>
    <testcase classname="Service Tests Basket Service Service methods should return a list of Basket" name="Service Tests Basket Service Service methods should return a list of Basket" time="0.101">
    </testcase>
    <testcase classname="Service Tests Basket Service Service methods should delete a Basket" name="Service Tests Basket Service Service methods should delete a Basket" time="0.081">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:29" time="0.879" tests="5">
    <testcase classname="Component Tests PasswordResetFinishComponent should define its initial state" name="Component Tests PasswordResetFinishComponent should define its initial state" time="0.047">
    </testcase>
    <testcase classname="Component Tests PasswordResetFinishComponent sets focus after the view has been initialized" name="Component Tests PasswordResetFinishComponent sets focus after the view has been initialized" time="0.025">
    </testcase>
    <testcase classname="Component Tests PasswordResetFinishComponent should ensure the two passwords entered match" name="Component Tests PasswordResetFinishComponent should ensure the two passwords entered match" time="0.024">
    </testcase>
    <testcase classname="Component Tests PasswordResetFinishComponent should update success to true after resetting password" name="Component Tests PasswordResetFinishComponent should update success to true after resetting password" time="0.023">
    </testcase>
    <testcase classname="Component Tests PasswordResetFinishComponent should notify of generic error" name="Component Tests PasswordResetFinishComponent should notify of generic error" time="0.022">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:29" time="0.846" tests="5">
    <testcase classname="Service Tests Payment Service Service methods should find an element" name="Service Tests Payment Service Service methods should find an element" time="0.031">
    </testcase>
    <testcase classname="Service Tests Payment Service Service methods should create a Payment" name="Service Tests Payment Service Service methods should create a Payment" time="0.016">
    </testcase>
    <testcase classname="Service Tests Payment Service Service methods should update a Payment" name="Service Tests Payment Service Service methods should update a Payment" time="0.015">
    </testcase>
    <testcase classname="Service Tests Payment Service Service methods should return a list of Payment" name="Service Tests Payment Service Service methods should return a list of Payment" time="0.014">
    </testcase>
    <testcase classname="Service Tests Payment Service Service methods should delete a Payment" name="Service Tests Payment Service Service methods should delete a Payment" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:30" time="0.996" tests="5">
    <testcase classname="Service Tests Order Service Service methods should find an element" name="Service Tests Order Service Service methods should find an element" time="0.027">
    </testcase>
    <testcase classname="Service Tests Order Service Service methods should create a Order" name="Service Tests Order Service Service methods should create a Order" time="0.017">
    </testcase>
    <testcase classname="Service Tests Order Service Service methods should update a Order" name="Service Tests Order Service Service methods should update a Order" time="0.016">
    </testcase>
    <testcase classname="Service Tests Order Service Service methods should return a list of Order" name="Service Tests Order Service Service methods should return a list of Order" time="0.014">
    </testcase>
    <testcase classname="Service Tests Order Service Service methods should delete a Order" name="Service Tests Order Service Service methods should delete a Order" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:30" time="1.398" tests="4">
    <testcase classname="Component Tests PasswordComponent should show error if passwords do not match" name="Component Tests PasswordComponent should show error if passwords do not match" time="0.019">
    </testcase>
    <testcase classname="Component Tests PasswordComponent should call Auth.changePassword when passwords match" name="Component Tests PasswordComponent should call Auth.changePassword when passwords match" time="0.017">
    </testcase>
    <testcase classname="Component Tests PasswordComponent should set success to true upon success" name="Component Tests PasswordComponent should set success to true upon success" time="0.019">
    </testcase>
    <testcase classname="Component Tests PasswordComponent should notify of error if change password fails" name="Component Tests PasswordComponent should notify of error if change password fails" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:31" time="1.31" tests="2">
    <testcase classname="Component Tests User Management Component OnInit Should call load all on init" name="Component Tests User Management Component OnInit Should call load all on init" time="0.018">
    </testcase>
    <testcase classname="Component Tests User Management Component setActive Should update user and call load all" name="Component Tests User Management Component setActive Should update user and call load all" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:32" time="0.385" tests="4">
    <testcase classname="Service Tests User Service Service methods should call correct URL" name="Service Tests User Service Service methods should call correct URL" time="0.012">
    </testcase>
    <testcase classname="Service Tests User Service Service methods should return User" name="Service Tests User Service Service methods should return User" time="0.008">
    </testcase>
    <testcase classname="Service Tests User Service Service methods should return Authorities" name="Service Tests User Service Service methods should return Authorities" time="0.007">
    </testcase>
    <testcase classname="Service Tests User Service Service methods should propagate not found response" name="Service Tests User Service Service methods should propagate not found response" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:32" time="2.331" tests="3">
    <testcase classname="Component Tests SettingsComponent should send the current identity upon save" name="Component Tests SettingsComponent should send the current identity upon save" time="0.024">
    </testcase>
    <testcase classname="Component Tests SettingsComponent should notify of success upon successful save" name="Component Tests SettingsComponent should notify of success upon successful save" time="0.013">
    </testcase>
    <testcase classname="Component Tests SettingsComponent should notify of error upon failed save" name="Component Tests SettingsComponent should notify of error upon failed save" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:33" time="1.828" tests="3">
    <testcase classname="Component Tests LogsComponent OnInit should set all default values correctly" name="Component Tests LogsComponent OnInit should set all default values correctly" time="0.026">
    </testcase>
    <testcase classname="Component Tests LogsComponent OnInit Should call load all on init" name="Component Tests LogsComponent OnInit Should call load all on init" time="0.016">
    </testcase>
    <testcase classname="Component Tests LogsComponent change log level should change log level correctly" name="Component Tests LogsComponent change log level should change log level correctly" time="0.022">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:35" time="0.59" tests="3">
    <testcase classname="Service Tests Audits Service Service methods should call correct URL" name="Service Tests Audits Service Service methods should call correct URL" time="0.025">
    </testcase>
    <testcase classname="Service Tests Audits Service Service methods should return Audits" name="Service Tests Audits Service Service methods should return Audits" time="0.016">
    </testcase>
    <testcase classname="Service Tests Audits Service Service methods should propagate not found response" name="Service Tests Audits Service Service methods should propagate not found response" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:34" time="1.152" tests="3">
    <testcase classname="Service Tests Logs Service Service methods should call correct URL" name="Service Tests Logs Service Service methods should call correct URL" time="0.136">
    </testcase>
    <testcase classname="Service Tests Logs Service Service methods should get the config" name="Service Tests Logs Service Service methods should get the config" time="0.084">
    </testcase>
    <testcase classname="Service Tests Logs Service Service methods should get the env" name="Service Tests Logs Service Service methods should get the env" time="0.145">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:35" time="0.606" tests="2">
    <testcase classname="Component Tests Cooperative Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests Cooperative Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.031">
    </testcase>
    <testcase classname="Component Tests Cooperative Management Delete Component confirmDelete Should not call delete service on clear" name="Component Tests Cooperative Management Delete Component confirmDelete Should not call delete service on clear" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:36" time="1.151" tests="2">
    <testcase classname="Component Tests Payment Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests Payment Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.028">
    </testcase>
    <testcase classname="Component Tests Payment Management Delete Component confirmDelete Should not call delete service on clear" name="Component Tests Payment Management Delete Component confirmDelete Should not call delete service on clear" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:35" time="4.661" tests="2">
    <testcase classname="Component Tests Restaurant Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests Restaurant Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.051">
    </testcase>
    <testcase classname="Component Tests Restaurant Management Delete Component confirmDelete Should not call delete service on clear" name="Component Tests Restaurant Management Delete Component confirmDelete Should not call delete service on clear" time="0.043">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:37" time="3.836" tests="2">
    <testcase classname="Component Tests Product Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests Product Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.025">
    </testcase>
    <testcase classname="Component Tests Product Management Delete Component confirmDelete Should not call delete service on clear" name="Component Tests Product Management Delete Component confirmDelete Should not call delete service on clear" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:40" time="2.709" tests="2">
    <testcase classname="Component Tests Basket Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests Basket Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.268">
    </testcase>
    <testcase classname="Component Tests Basket Management Delete Component confirmDelete Should not call delete service on clear" name="Component Tests Basket Management Delete Component confirmDelete Should not call delete service on clear" time="0.231">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:41" time="2.634" tests="2">
    <testcase classname="Component Tests Course Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests Course Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.251">
    </testcase>
    <testcase classname="Component Tests Course Management Delete Component confirmDelete Should not call delete service on clear" name="Component Tests Course Management Delete Component confirmDelete Should not call delete service on clear" time="0.243">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:43" time="1.537" tests="2">
    <testcase classname="Component Tests Order Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests Order Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.041">
    </testcase>
    <testcase classname="Component Tests Order Management Delete Component confirmDelete Should not call delete service on clear" name="Component Tests Order Management Delete Component confirmDelete Should not call delete service on clear" time="0.049">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:44" time="3.319" tests="3">
    <testcase classname="Component Tests HealthComponent getBadgeClass should get badge class" name="Component Tests HealthComponent getBadgeClass should get badge class" time="0.035">
    </testcase>
    <testcase classname="Component Tests HealthComponent refresh should call refresh on init" name="Component Tests HealthComponent refresh should call refresh on init" time="0.023">
    </testcase>
    <testcase classname="Component Tests HealthComponent refresh should handle a 503 on refreshing health data" name="Component Tests HealthComponent refresh should handle a 503 on refreshing health data" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:45" time="2.344" tests="3">
    <testcase classname="Component Tests PasswordResetInitComponent sets focus after the view has been initialized" name="Component Tests PasswordResetInitComponent sets focus after the view has been initialized" time="0.016">
    </testcase>
    <testcase classname="Component Tests PasswordResetInitComponent notifies of success upon successful requestReset" name="Component Tests PasswordResetInitComponent notifies of success upon successful requestReset" time="0.014">
    </testcase>
    <testcase classname="Component Tests PasswordResetInitComponent no notification of success upon error response" name="Component Tests PasswordResetInitComponent no notification of success upon error response" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:47" time="1.265" tests="2">
    <testcase classname="Component Tests Restaurant Management Update Component save Should call update service on save for existing entity" name="Component Tests Restaurant Management Update Component save Should call update service on save for existing entity" time="0.026">
    </testcase>
    <testcase classname="Component Tests Restaurant Management Update Component save Should call create service on save for new entity" name="Component Tests Restaurant Management Update Component save Should call create service on save for new entity" time="0.026">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:47" time="2.407" tests="2">
    <testcase classname="Component Tests Cooperative Management Update Component save Should call update service on save for existing entity" name="Component Tests Cooperative Management Update Component save Should call update service on save for existing entity" time="0.033">
    </testcase>
    <testcase classname="Component Tests Cooperative Management Update Component save Should call create service on save for new entity" name="Component Tests Cooperative Management Update Component save Should call create service on save for new entity" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:49" time="2.423" tests="2">
    <testcase classname="Component Tests Payment Management Update Component save Should call update service on save for existing entity" name="Component Tests Payment Management Update Component save Should call update service on save for existing entity" time="0.036">
    </testcase>
    <testcase classname="Component Tests Payment Management Update Component save Should call create service on save for new entity" name="Component Tests Payment Management Update Component save Should call create service on save for new entity" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:50" time="3.216" tests="2">
    <testcase classname="Component Tests Product Management Update Component save Should call update service on save for existing entity" name="Component Tests Product Management Update Component save Should call update service on save for existing entity" time="0.027">
    </testcase>
    <testcase classname="Component Tests Product Management Update Component save Should call create service on save for new entity" name="Component Tests Product Management Update Component save Should call create service on save for new entity" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:51" time="2.276" tests="1">
    <testcase classname="Component Tests ConfigurationComponent OnInit Should call load all on init" name="Component Tests ConfigurationComponent OnInit Should call load all on init" time="0.028">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:53" time="5.034" tests="2">
    <testcase classname="Component Tests Basket Management Update Component save Should call update service on save for existing entity" name="Component Tests Basket Management Update Component save Should call update service on save for existing entity" time="0.035">
    </testcase>
    <testcase classname="Component Tests Basket Management Update Component save Should call create service on save for new entity" name="Component Tests Basket Management Update Component save Should call create service on save for new entity" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:53" time="5.508" tests="2">
    <testcase classname="Component Tests Course Management Update Component save Should call update service on save for existing entity" name="Component Tests Course Management Update Component save Should call update service on save for existing entity" time="0.026">
    </testcase>
    <testcase classname="Component Tests Course Management Update Component save Should call create service on save for new entity" name="Component Tests Course Management Update Component save Should call create service on save for new entity" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:58" time="3.381" tests="3">
    <testcase classname="Component Tests ActivateComponent calls activate.get with the key from params" name="Component Tests ActivateComponent calls activate.get with the key from params" time="0.037">
    </testcase>
    <testcase classname="Component Tests ActivateComponent should set set success to true upon successful activation" name="Component Tests ActivateComponent should set set success to true upon successful activation" time="0.026">
    </testcase>
    <testcase classname="Component Tests ActivateComponent should set set error to true upon activation failure" name="Component Tests ActivateComponent should set set error to true upon activation failure" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:04:02" time="1.278" tests="1">
    <testcase classname="Component Tests User Management Delete Component confirmDelete Should call delete service on confirmDelete" name="Component Tests User Management Delete Component confirmDelete Should call delete service on confirmDelete" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:03:59" time="4.978" tests="2">
    <testcase classname="Component Tests Order Management Update Component save Should call update service on save for existing entity" name="Component Tests Order Management Update Component save Should call update service on save for existing entity" time="0.026">
    </testcase>
    <testcase classname="Component Tests Order Management Update Component save Should call create service on save for new entity" name="Component Tests Order Management Update Component save Should call create service on save for new entity" time="0.026">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:04:04" time="2.751" tests="3">
    <testcase classname="Service Tests Logs Service Service methods should call correct URL" name="Service Tests Logs Service Service methods should call correct URL" time="0.442">
    </testcase>
    <testcase classname="Service Tests Logs Service Service methods should return Metrics" name="Service Tests Logs Service Service methods should return Metrics" time="0.008">
    </testcase>
    <testcase classname="Service Tests Logs Service Service methods should return Thread Dump" name="Service Tests Logs Service Service methods should return Thread Dump" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:04:04" time="2.407" tests="3">
    <testcase classname="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should initialize with default values" name="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should initialize with default values" time="0.322">
    </testcase>
    <testcase classname="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should increase strength upon password value change" name="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should increase strength upon password value change" time="0.012">
    </testcase>
    <testcase classname="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should change the color based on strength" name="Component Tests PasswordStrengthBarComponent PasswordStrengthBarComponents should change the color based on strength" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:04:06" time="2.699" tests="1">
    <testcase classname="Component Tests User Management Detail Component OnInit Should call load all on init" name="Component Tests User Management Detail Component OnInit Should call load all on init" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:04:07" time="2.537" tests="1">
    <testcase classname="Component Tests Cooperative Management Component Should call load all on init" name="Component Tests Cooperative Management Component Should call load all on init" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:04:09" time="10.708" tests="1">
    <testcase classname="Component Tests Restaurant Management Component Should call load all on init" name="Component Tests Restaurant Management Component Should call load all on init" time="0.291">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:04:09" time="11.084" tests="1">
    <testcase classname="Component Tests Payment Management Component Should call load all on init" name="Component Tests Payment Management Component Should call load all on init" time="0.026">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:04:21" time="52.487" tests="1">
    <testcase classname="Component Tests Basket Management Component Should call load all on init" name="Component Tests Basket Management Component Should call load all on init" time="0.044">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:04:21" time="52.893" tests="1">
    <testcase classname="Component Tests Product Management Component Should call load all on init" name="Component Tests Product Management Component Should call load all on init" time="0.406">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:05:16" time="35.8" tests="1">
    <testcase classname="Component Tests Course Management Component Should call load all on init" name="Component Tests Course Management Component Should call load all on init" time="0.057">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:05:16" time="35.863" tests="1">
    <testcase classname="Component Tests Order Management Component Should call load all on init" name="Component Tests Order Management Component Should call load all on init" time="0.053">
    </testcase>
  </testsuite>
  <testsuite name="Service Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:05:52" time="1.959" tests="2">
    <testcase classname="Service Tests Logs Service Service methods should call correct URL" name="Service Tests Logs Service Service methods should call correct URL" time="0.012">
    </testcase>
    <testcase classname="Service Tests Logs Service Service methods should change log level" name="Service Tests Logs Service Service methods should change log level" time="0.574">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:05:52" time="3.022" tests="1">
    <testcase classname="Component Tests MetricsComponent refresh should call refresh on init" name="Component Tests MetricsComponent refresh should call refresh on init" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:05:54" time="1.297" tests="1">
    <testcase classname="Component Tests Cooperative Management Detail Component OnInit Should load cooperative on init" name="Component Tests Cooperative Management Detail Component OnInit Should load cooperative on init" time="0.032">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:05:55" time="2.13" tests="1">
    <testcase classname="Component Tests Restaurant Management Detail Component OnInit Should load restaurant on init" name="Component Tests Restaurant Management Detail Component OnInit Should load restaurant on init" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:05:55" time="2.647" tests="1">
    <testcase classname="Component Tests Payment Management Detail Component OnInit Should load payment on init" name="Component Tests Payment Management Detail Component OnInit Should load payment on init" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:05:57" time="3.458" tests="1">
    <testcase classname="Component Tests Product Management Detail Component OnInit Should load product on init" name="Component Tests Product Management Detail Component OnInit Should load product on init" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:05:59" time="3.036" tests="1">
    <testcase classname="Component Tests Basket Management Detail Component OnInit Should load basket on init" name="Component Tests Basket Management Detail Component OnInit Should load basket on init" time="0.346">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:06:01" time="2.414" tests="1">
    <testcase classname="Component Tests Course Management Detail Component OnInit Should load course on init" name="Component Tests Course Management Detail Component OnInit Should load course on init" time="0.031">
    </testcase>
  </testsuite>
  <testsuite name="Component Tests" errors="0" failures="0" skipped="0" timestamp="2020-04-23T14:06:02" time="2.863" tests="1">
    <testcase classname="Component Tests Order Management Detail Component OnInit Should load order on init" name="Component Tests Order Management Detail Component OnInit Should load order on init" time="0.054">
    </testcase>
  </testsuite>
</testsuites>