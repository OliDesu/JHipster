{"file":"/home/ali/exemple-jhipster/testbed/src/main/webapp/app/entities/order/order-update.component.ts","mappings":";;;AAAA,wCAAkD;AAElD,6DAA6D;AAC7D,0CAAyD;AACzD,4CAAiD;AAGjD,8DAA6D;AAC7D,mDAA+C;AAM/C,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAQ/B,YAAsB,YAA0B,EAAY,cAA8B,EAAU,EAAe;QAA7F,iBAAY,GAAZ,YAAY,CAAc;QAAY,mBAAc,GAAd,cAAc,CAAgB;QAAU,OAAE,GAAF,EAAE,CAAa;QAPnH,aAAQ,GAAG,KAAK,CAAC;QAEjB,aAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACvB,EAAE,EAAE,EAAE;YACN,OAAO,EAAE,CAAC,IAAI,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;SACvC,CAAC,CAAC;IAEmH,CAAC;IAEvH,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE;YAC/C,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,KAAa;QACtB,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;YACvB,EAAE,EAAE,KAAK,CAAC,EAAE;YACZ,OAAO,EAAE,KAAK,CAAC,OAAO;SACvB,CAAC,CAAC;IACL,CAAC;IAED,aAAa;QACX,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IAED,IAAI;QACF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QACpC,IAAI,KAAK,CAAC,EAAE,KAAK,SAAS,EAAE;YAC1B,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;SAC/D;aAAM;YACL,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;SAC/D;IACH,CAAC;IAEO,cAAc;QACpB,uCACK,IAAI,mBAAK,EAAE,KACd,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAE,CAAC,KAAK,EACpC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAE,CAAC,KAAK,IAC9C;IACJ,CAAC;IAES,uBAAuB,CAAC,MAAwC;QACxE,MAAM,CAAC,SAAS,CACd,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE,EAC1B,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,CACzB,CAAC;IACJ,CAAC;IAES,aAAa;QACrB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAES,WAAW;QACnB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;CACF,CAAA;AA5DY,oBAAoB;IAJhC,gBAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,kBAAa,+BAA+B,CAAA;KAC7C,CAAC;6CASoC,4BAAY,EAA4B,uBAAc,EAAc,mBAAW;GARxG,oBAAoB,CA4DhC;AA5DY,oDAAoB","names":[],"sources":["/home/ali/exemple-jhipster/testbed/src/main/webapp/app/entities/order/order-update.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { IOrder, Order } from 'app/shared/model/order.model';\nimport { OrderService } from './order.service';\n\n@Component({\n  selector: 'jhi-order-update',\n  templateUrl: './order-update.component.html'\n})\nexport class OrderUpdateComponent implements OnInit {\n  isSaving = false;\n\n  editForm = this.fb.group({\n    id: [],\n    orderId: [null, [Validators.required]]\n  });\n\n  constructor(protected orderService: OrderService, protected activatedRoute: ActivatedRoute, private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.activatedRoute.data.subscribe(({ order }) => {\n      this.updateForm(order);\n    });\n  }\n\n  updateForm(order: IOrder): void {\n    this.editForm.patchValue({\n      id: order.id,\n      orderId: order.orderId\n    });\n  }\n\n  previousState(): void {\n    window.history.back();\n  }\n\n  save(): void {\n    this.isSaving = true;\n    const order = this.createFromForm();\n    if (order.id !== undefined) {\n      this.subscribeToSaveResponse(this.orderService.update(order));\n    } else {\n      this.subscribeToSaveResponse(this.orderService.create(order));\n    }\n  }\n\n  private createFromForm(): IOrder {\n    return {\n      ...new Order(),\n      id: this.editForm.get(['id'])!.value,\n      orderId: this.editForm.get(['orderId'])!.value\n    };\n  }\n\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<IOrder>>): void {\n    result.subscribe(\n      () => this.onSaveSuccess(),\n      () => this.onSaveError()\n    );\n  }\n\n  protected onSaveSuccess(): void {\n    this.isSaving = false;\n    this.previousState();\n  }\n\n  protected onSaveError(): void {\n    this.isSaving = false;\n  }\n}\n"],"version":3}