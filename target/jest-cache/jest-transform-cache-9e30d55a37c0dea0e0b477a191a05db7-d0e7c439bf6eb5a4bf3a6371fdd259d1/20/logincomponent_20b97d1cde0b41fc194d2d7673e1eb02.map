{"file":"/home/ali/exemple-jhipster/testbed/src/main/webapp/app/shared/login/login.component.ts","mappings":";;;AAAA,wCAAgF;AAChF,0CAA6C;AAC7C,6DAA4D;AAC5D,4CAAyC;AAEzC,gEAA4D;AAM5D,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;IAY9B,YAAoB,YAA0B,EAAU,MAAc,EAAS,WAA2B,EAAU,EAAe;QAA/G,iBAAY,GAAZ,YAAY,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAS,gBAAW,GAAX,WAAW,CAAgB;QAAU,OAAE,GAAF,EAAE,CAAa;QARnI,wBAAmB,GAAG,KAAK,CAAC;QAE5B,cAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,UAAU,EAAE,CAAC,KAAK,CAAC;SACpB,CAAC,CAAC;IAEmI,CAAC;IAEvI,eAAe;QACb,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SACrC;IACH,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACjC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;YACxB,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,EAAE;SACb,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC;IAED,KAAK;QACH,IAAI,CAAC,YAAY;aACd,KAAK,CAAC;YACL,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAE,CAAC,KAAK;YAC/C,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAE,CAAC,KAAK;YAC/C,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAE,CAAC,KAAK;SACpD,CAAC;aACD,SAAS,CACR,GAAG,EAAE;YACH,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;YACjC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;YACzB,IACE,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK,mBAAmB;gBACvC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,mBAAmB,CAAC;gBAC/C,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,iBAAiB,CAAC,EAC7C;gBACA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAC5B;QACH,CAAC,EACD,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,CACxC,CAAC;IACN,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;QAC9C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;IAC9C,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;QAClD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAAC,CAAC;IACtD,CAAC;CACF,CAAA;AA3DC;IADC,gBAAS,CAAC,UAAU,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;sCAC9B,iBAAU;qDAAC;AAFX,mBAAmB;IAJ/B,gBAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,kBAAa,wBAAwB,CAAA;KACtC,CAAC;6CAakC,4BAAY,EAAkB,eAAM,EAAsB,6BAAc,EAAc,mBAAW;GAZxH,mBAAmB,CA6D/B;AA7DY,kDAAmB","names":[],"sources":["/home/ali/exemple-jhipster/testbed/src/main/webapp/app/shared/login/login.component.ts"],"sourcesContent":["import { Component, AfterViewInit, ElementRef, ViewChild } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Router } from '@angular/router';\n\nimport { LoginService } from 'app/core/login/login.service';\n\n@Component({\n  selector: 'jhi-login-modal',\n  templateUrl: './login.component.html'\n})\nexport class LoginModalComponent implements AfterViewInit {\n  @ViewChild('username', { static: false })\n  username?: ElementRef;\n\n  authenticationError = false;\n\n  loginForm = this.fb.group({\n    username: [''],\n    password: [''],\n    rememberMe: [false]\n  });\n\n  constructor(private loginService: LoginService, private router: Router, public activeModal: NgbActiveModal, private fb: FormBuilder) {}\n\n  ngAfterViewInit(): void {\n    if (this.username) {\n      this.username.nativeElement.focus();\n    }\n  }\n\n  cancel(): void {\n    this.authenticationError = false;\n    this.loginForm.patchValue({\n      username: '',\n      password: ''\n    });\n    this.activeModal.dismiss('cancel');\n  }\n\n  login(): void {\n    this.loginService\n      .login({\n        username: this.loginForm.get('username')!.value,\n        password: this.loginForm.get('password')!.value,\n        rememberMe: this.loginForm.get('rememberMe')!.value\n      })\n      .subscribe(\n        () => {\n          this.authenticationError = false;\n          this.activeModal.close();\n          if (\n            this.router.url === '/account/register' ||\n            this.router.url.startsWith('/account/activate') ||\n            this.router.url.startsWith('/account/reset/')\n          ) {\n            this.router.navigate(['']);\n          }\n        },\n        () => (this.authenticationError = true)\n      );\n  }\n\n  register(): void {\n    this.activeModal.dismiss('to state register');\n    this.router.navigate(['/account/register']);\n  }\n\n  requestResetPassword(): void {\n    this.activeModal.dismiss('to state requestReset');\n    this.router.navigate(['/account/reset', 'request']);\n  }\n}\n"],"version":3}