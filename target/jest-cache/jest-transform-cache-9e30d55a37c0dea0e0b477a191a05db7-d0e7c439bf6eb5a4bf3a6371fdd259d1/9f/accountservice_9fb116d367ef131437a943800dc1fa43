bdb2998ce437575d5d340609952ce712
"use strict";

/* istanbul ignore next */
var cov_2ap2umkswg = function () {
  var path = "/home/ali/exemple-jhipster/testbed/src/main/webapp/app/core/auth/account.service.ts";
  var hash = "b96bb929af7ae7320f74979865618da4ea33907f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ali/exemple-jhipster/testbed/src/main/webapp/app/core/auth/account.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 16
        },
        end: {
          line: 3,
          column: 32
        }
      },
      "2": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 39
        }
      },
      "3": {
        start: {
          line: 5,
          column: 17
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "4": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 46
        }
      },
      "5": {
        start: {
          line: 7,
          column: 22
        },
        end: {
          line: 7,
          column: 44
        }
      },
      "6": {
        start: {
          line: 8,
          column: 25
        },
        end: {
          line: 8,
          column: 50
        }
      },
      "7": {
        start: {
          line: 9,
          column: 15
        },
        end: {
          line: 9,
          column: 30
        }
      },
      "8": {
        start: {
          line: 10,
          column: 20
        },
        end: {
          line: 10,
          column: 45
        }
      },
      "9": {
        start: {
          line: 11,
          column: 32
        },
        end: {
          line: 11,
          column: 78
        }
      },
      "10": {
        start: {
          line: 12,
          column: 24
        },
        end: {
          line: 12,
          column: 52
        }
      },
      "11": {
        start: {
          line: 13,
          column: 21
        },
        end: {
          line: 79,
          column: 1
        }
      },
      "12": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 47
        }
      },
      "13": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 45
        }
      },
      "14": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 25
        }
      },
      "15": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 55
        }
      },
      "16": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 29
        }
      },
      "17": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 33
        }
      },
      "18": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 63
        }
      },
      "19": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 87
        }
      },
      "20": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 37
        }
      },
      "21": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 57
        }
      },
      "22": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 33,
          column: 9
        }
      },
      "23": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 25
        }
      },
      "24": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "25": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 40
        }
      },
      "26": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 98
        }
      },
      "27": {
        start: {
          line: 37,
          column: 65
        },
        end: {
          line: 37,
          column: 96
        }
      },
      "28": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "29": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 54,
          column: 43
        }
      },
      "30": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 39
        }
      },
      "31": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 43
        }
      },
      "32": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 50,
          column: 17
        }
      },
      "33": {
        start: {
          line: 48,
          column: 36
        },
        end: {
          line: 48,
          column: 93
        }
      },
      "34": {
        start: {
          line: 49,
          column: 20
        },
        end: {
          line: 49,
          column: 65
        }
      },
      "35": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 53,
          column: 17
        }
      },
      "36": {
        start: {
          line: 52,
          column: 20
        },
        end: {
          line: 52,
          column: 47
        }
      },
      "37": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 34
        }
      },
      "38": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 42
        }
      },
      "39": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 55
        }
      },
      "40": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 67
        }
      },
      "41": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 77
        }
      },
      "42": {
        start: {
          line: 73,
          column: 28
        },
        end: {
          line: 73,
          column: 61
        }
      },
      "43": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "44": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 48
        }
      },
      "45": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 51
        }
      },
      "46": {
        start: {
          line: 80,
          column: 0
        },
        end: {
          line: 87,
          column: 19
        }
      },
      "47": {
        start: {
          line: 88,
          column: 0
        },
        end: {
          line: 88,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 84
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 14
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 18
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 27
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 26
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 33
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 30
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 37,
            column: 50
          },
          end: {
            line: 37,
            column: 51
          }
        },
        loc: {
          start: {
            line: 37,
            column: 65
          },
          end: {
            line: 37,
            column: 96
          }
        },
        line: 37
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 20
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 39
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 41,
            column: 74
          },
          end: {
            line: 41,
            column: 75
          }
        },
        loc: {
          start: {
            line: 41,
            column: 80
          },
          end: {
            line: 43,
            column: 13
          }
        },
        line: 41
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 43,
            column: 32
          },
          end: {
            line: 43,
            column: 33
          }
        },
        loc: {
          start: {
            line: 43,
            column: 45
          },
          end: {
            line: 54,
            column: 13
          }
        },
        line: 43
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        loc: {
          start: {
            line: 58,
            column: 22
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 58
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        loc: {
          start: {
            line: 61,
            column: 29
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 61
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        loc: {
          start: {
            line: 64,
            column: 18
          },
          end: {
            line: 66,
            column: 5
          }
        },
        line: 64
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        },
        loc: {
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 67
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        },
        loc: {
          start: {
            line: 70,
            column: 26
          },
          end: {
            line: 78,
            column: 5
          }
        },
        line: 70
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        }, {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 31,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 31,
            column: 30
          }
        }, {
          start: {
            line: 31,
            column: 34
          },
          end: {
            line: 31,
            column: 64
          }
        }],
        line: 31
      },
      "2": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        }, {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        }],
        line: 34
      },
      "3": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        }, {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        }],
        line: 40
      },
      "4": {
        loc: {
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 40,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 40,
            column: 31
          }
        }, {
          start: {
            line: 40,
            column: 35
          },
          end: {
            line: 40,
            column: 40
          }
        }, {
          start: {
            line: 40,
            column: 44
          },
          end: {
            line: 40,
            column: 67
          }
        }],
        line: 40
      },
      "5": {
        loc: {
          start: {
            line: 47,
            column: 16
          },
          end: {
            line: 50,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 16
          },
          end: {
            line: 50,
            column: 17
          }
        }, {
          start: {
            line: 47,
            column: 16
          },
          end: {
            line: 50,
            column: 17
          }
        }],
        line: 47
      },
      "6": {
        loc: {
          start: {
            line: 47,
            column: 20
          },
          end: {
            line: 47,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 20
          },
          end: {
            line: 47,
            column: 27
          }
        }, {
          start: {
            line: 47,
            column: 31
          },
          end: {
            line: 47,
            column: 46
          }
        }],
        line: 47
      },
      "7": {
        loc: {
          start: {
            line: 48,
            column: 36
          },
          end: {
            line: 48,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 36
          },
          end: {
            line: 48,
            column: 74
          }
        }, {
          start: {
            line: 48,
            column: 78
          },
          end: {
            line: 48,
            column: 93
          }
        }],
        line: 48
      },
      "8": {
        loc: {
          start: {
            line: 51,
            column: 16
          },
          end: {
            line: 53,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 16
          },
          end: {
            line: 53,
            column: 17
          }
        }, {
          start: {
            line: 51,
            column: 16
          },
          end: {
            line: 53,
            column: 17
          }
        }],
        line: 51
      },
      "9": {
        loc: {
          start: {
            line: 65,
            column: 15
          },
          end: {
            line: 65,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 65,
            column: 35
          },
          end: {
            line: 65,
            column: 61
          }
        }, {
          start: {
            line: 65,
            column: 64
          },
          end: {
            line: 65,
            column: 66
          }
        }],
        line: 65
      },
      "10": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        }, {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        }],
        line: 74
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "b96bb929af7ae7320f74979865618da4ea33907f"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

cov_2ap2umkswg.s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const tslib_1 =
/* istanbul ignore next */
(cov_2ap2umkswg.s[1]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_2ap2umkswg.s[2]++, require("@angular/core"));
const router_1 =
/* istanbul ignore next */
(cov_2ap2umkswg.s[3]++, require("@angular/router"));
const http_1 =
/* istanbul ignore next */
(cov_2ap2umkswg.s[4]++, require("@angular/common/http"));
const ng_jhipster_1 =
/* istanbul ignore next */
(cov_2ap2umkswg.s[5]++, require("ng-jhipster"));
const ngx_webstorage_1 =
/* istanbul ignore next */
(cov_2ap2umkswg.s[6]++, require("ngx-webstorage"));
const rxjs_1 =
/* istanbul ignore next */
(cov_2ap2umkswg.s[7]++, require("rxjs"));
const operators_1 =
/* istanbul ignore next */
(cov_2ap2umkswg.s[8]++, require("rxjs/operators"));
const state_storage_service_1 =
/* istanbul ignore next */
(cov_2ap2umkswg.s[9]++, require("app/core/auth/state-storage.service"));
const app_constants_1 =
/* istanbul ignore next */
(cov_2ap2umkswg.s[10]++, require("app/app.constants"));

/* istanbul ignore next */
cov_2ap2umkswg.s[11]++;
let AccountService = class AccountService {
  constructor(languageService, sessionStorage, http, stateStorageService, router) {
    /* istanbul ignore next */
    cov_2ap2umkswg.f[0]++;
    cov_2ap2umkswg.s[12]++;
    this.languageService = languageService;

    /* istanbul ignore next */
    cov_2ap2umkswg.s[13]++;
    this.sessionStorage = sessionStorage;

    /* istanbul ignore next */
    cov_2ap2umkswg.s[14]++;
    this.http = http;

    /* istanbul ignore next */
    cov_2ap2umkswg.s[15]++;
    this.stateStorageService = stateStorageService;

    /* istanbul ignore next */
    cov_2ap2umkswg.s[16]++;
    this.router = router;

    /* istanbul ignore next */
    cov_2ap2umkswg.s[17]++;
    this.userIdentity = null;

    /* istanbul ignore next */
    cov_2ap2umkswg.s[18]++;
    this.authenticationState = new rxjs_1.ReplaySubject(1);
  }

  save(account) {
    /* istanbul ignore next */
    cov_2ap2umkswg.f[1]++;
    cov_2ap2umkswg.s[19]++;
    return this.http.post(app_constants_1.SERVER_API_URL + 'api/account', account);
  }

  authenticate(identity) {
    /* istanbul ignore next */
    cov_2ap2umkswg.f[2]++;
    cov_2ap2umkswg.s[20]++;
    this.userIdentity = identity;

    /* istanbul ignore next */
    cov_2ap2umkswg.s[21]++;
    this.authenticationState.next(this.userIdentity);
  }

  hasAnyAuthority(authorities) {
    /* istanbul ignore next */
    cov_2ap2umkswg.f[3]++;
    cov_2ap2umkswg.s[22]++;

    if (
    /* istanbul ignore next */
    (cov_2ap2umkswg.b[1][0]++, !this.userIdentity) ||
    /* istanbul ignore next */
    (cov_2ap2umkswg.b[1][1]++, !this.userIdentity.authorities)) {
      /* istanbul ignore next */
      cov_2ap2umkswg.b[0][0]++;
      cov_2ap2umkswg.s[23]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_2ap2umkswg.b[0][1]++;
    }

    cov_2ap2umkswg.s[24]++;

    if (!Array.isArray(authorities)) {
      /* istanbul ignore next */
      cov_2ap2umkswg.b[2][0]++;
      cov_2ap2umkswg.s[25]++;
      authorities = [authorities];
    } else
    /* istanbul ignore next */
    {
      cov_2ap2umkswg.b[2][1]++;
    }

    cov_2ap2umkswg.s[26]++;
    return this.userIdentity.authorities.some(authority => {
      /* istanbul ignore next */
      cov_2ap2umkswg.f[4]++;
      cov_2ap2umkswg.s[27]++;
      return authorities.includes(authority);
    });
  }

  identity(force) {
    /* istanbul ignore next */
    cov_2ap2umkswg.f[5]++;
    cov_2ap2umkswg.s[28]++;

    if (
    /* istanbul ignore next */
    (cov_2ap2umkswg.b[4][0]++, !this.accountCache$) ||
    /* istanbul ignore next */
    (cov_2ap2umkswg.b[4][1]++, force) ||
    /* istanbul ignore next */
    (cov_2ap2umkswg.b[4][2]++, !this.isAuthenticated())) {
      /* istanbul ignore next */
      cov_2ap2umkswg.b[3][0]++;
      cov_2ap2umkswg.s[29]++;
      this.accountCache$ = this.fetch().pipe(operators_1.catchError(() => {
        /* istanbul ignore next */
        cov_2ap2umkswg.f[6]++;
        cov_2ap2umkswg.s[30]++;
        return rxjs_1.of(null);
      }), operators_1.tap(account => {
        /* istanbul ignore next */
        cov_2ap2umkswg.f[7]++;
        cov_2ap2umkswg.s[31]++;
        this.authenticate(account); // After retrieve the account info, the language will be changed to
        // the user's preferred language configured in the account setting

        /* istanbul ignore next */
        cov_2ap2umkswg.s[32]++;

        if (
        /* istanbul ignore next */
        (cov_2ap2umkswg.b[6][0]++, account) &&
        /* istanbul ignore next */
        (cov_2ap2umkswg.b[6][1]++, account.langKey)) {
          /* istanbul ignore next */
          cov_2ap2umkswg.b[5][0]++;
          const langKey =
          /* istanbul ignore next */
          (cov_2ap2umkswg.s[33]++,
          /* istanbul ignore next */
          (cov_2ap2umkswg.b[7][0]++, this.sessionStorage.retrieve('locale')) ||
          /* istanbul ignore next */
          (cov_2ap2umkswg.b[7][1]++, account.langKey));

          /* istanbul ignore next */
          cov_2ap2umkswg.s[34]++;
          this.languageService.changeLanguage(langKey);
        } else
        /* istanbul ignore next */
        {
          cov_2ap2umkswg.b[5][1]++;
        }

        cov_2ap2umkswg.s[35]++;

        if (account) {
          /* istanbul ignore next */
          cov_2ap2umkswg.b[8][0]++;
          cov_2ap2umkswg.s[36]++;
          this.navigateToStoredUrl();
        } else
        /* istanbul ignore next */
        {
          cov_2ap2umkswg.b[8][1]++;
        }
      }), operators_1.shareReplay());
    } else
    /* istanbul ignore next */
    {
      cov_2ap2umkswg.b[3][1]++;
    }

    cov_2ap2umkswg.s[37]++;
    return this.accountCache$;
  }

  isAuthenticated() {
    /* istanbul ignore next */
    cov_2ap2umkswg.f[8]++;
    cov_2ap2umkswg.s[38]++;
    return this.userIdentity !== null;
  }

  getAuthenticationState() {
    /* istanbul ignore next */
    cov_2ap2umkswg.f[9]++;
    cov_2ap2umkswg.s[39]++;
    return this.authenticationState.asObservable();
  }

  getImageUrl() {
    /* istanbul ignore next */
    cov_2ap2umkswg.f[10]++;
    cov_2ap2umkswg.s[40]++;
    return this.userIdentity ?
    /* istanbul ignore next */
    (cov_2ap2umkswg.b[9][0]++, this.userIdentity.imageUrl) :
    /* istanbul ignore next */
    (cov_2ap2umkswg.b[9][1]++, '');
  }

  fetch() {
    /* istanbul ignore next */
    cov_2ap2umkswg.f[11]++;
    cov_2ap2umkswg.s[41]++;
    return this.http.get(app_constants_1.SERVER_API_URL + 'api/account');
  }

  navigateToStoredUrl() {
    /* istanbul ignore next */
    cov_2ap2umkswg.f[12]++;
    // previousState can be set in the authExpiredInterceptor and in the userRouteAccessService
    // if login is successful, go to stored previousState and clear previousState
    const previousUrl =
    /* istanbul ignore next */
    (cov_2ap2umkswg.s[42]++, this.stateStorageService.getUrl());

    /* istanbul ignore next */
    cov_2ap2umkswg.s[43]++;

    if (previousUrl) {
      /* istanbul ignore next */
      cov_2ap2umkswg.b[10][0]++;
      cov_2ap2umkswg.s[44]++;
      this.stateStorageService.clearUrl();

      /* istanbul ignore next */
      cov_2ap2umkswg.s[45]++;
      this.router.navigateByUrl(previousUrl);
    } else
    /* istanbul ignore next */
    {
      cov_2ap2umkswg.b[10][1]++;
    }
  }

};

/* istanbul ignore next */
cov_2ap2umkswg.s[46]++;
AccountService = tslib_1.__decorate([core_1.Injectable({
  providedIn: 'root'
}), tslib_1.__metadata("design:paramtypes", [ng_jhipster_1.JhiLanguageService, ngx_webstorage_1.SessionStorageService, http_1.HttpClient, state_storage_service_1.StateStorageService, router_1.Router])], AccountService);

/* istanbul ignore next */
cov_2ap2umkswg.s[47]++;
exports.AccountService = AccountService;