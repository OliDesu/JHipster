{"file":"/home/ali/exemple-jhipster/testbed/src/main/webapp/app/admin/audits/audits.component.ts","mappings":";;;AAAA,wCAAkD;AAElD,4CAA2C;AAC3C,4CAAyD;AAEzD,oFAA2E;AAE3E,qDAAiD;AAMjD,IAAa,eAAe,GAA5B,MAAa,eAAe;IAa1B,YACU,aAA4B,EAC5B,cAA8B,EAC9B,QAAkB,EAClB,MAAc;QAHd,kBAAa,GAAb,aAAa,CAAe;QAC5B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,aAAQ,GAAR,QAAQ,CAAU;QAClB,WAAM,GAAN,MAAM,CAAQ;QAfxB,aAAQ,GAAG,EAAE,CAAC;QACd,iBAAY,GAAG,qCAAc,CAAC;QAK9B,WAAM,GAAG,EAAE,CAAC;QACZ,eAAU,GAAG,CAAC,CAAC;QAEP,eAAU,GAAG,YAAY,CAAC;IAO/B,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACrC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACxC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC;YACtC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC;YAC9C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC;YAChD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC;YAChD,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ,CAAC,IAAY;QACnB,IAAI,IAAI,KAAK,IAAI,CAAC,YAAY,EAAE;YAC9B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,UAAU,EAAE,CAAC;SACnB;IACH,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,QAAQ,KAAK,EAAE,IAAI,IAAI,CAAC,MAAM,KAAK,EAAE,CAAC;IACpD,CAAC;IAED,UAAU;QACR,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE;YAClB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,EAAE;gBACtC,WAAW,EAAE;oBACX,IAAI,EAAE,IAAI,CAAC,IAAI;oBACf,IAAI,EAAE,IAAI,CAAC,SAAS,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC;iBAC/D;aACF,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,EAAE,CAAC;SACjB;IACH,CAAC;IAEO,aAAa;QACnB,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QACtB,IAAI,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAE;YACzB,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;SAC7D;aAAM;YACL,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;SAC1E;QACD,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAE,CAAC;IACzD,CAAC;IAEO,KAAK;QACX,6DAA6D;QAC7D,MAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QACxB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;QACjC,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAE,CAAC;IACzD,CAAC;IAEO,QAAQ;QACd,IAAI,CAAC,aAAa;aACf,KAAK,CAAC;YACL,IAAI,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC;YACnB,IAAI,EAAE,IAAI,CAAC,YAAY;YACvB,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE;YACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC;aACD,SAAS,CAAC,CAAC,GAA0B,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;IACtF,CAAC;IAEO,IAAI;QACV,MAAM,MAAM,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QAC1E,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,EAAE;YAC3B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACnB;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAEO,SAAS,CAAC,MAAsB,EAAE,OAAoB;QAC5D,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC;QACvD,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;IAC7B,CAAC;CACF,CAAA;AAhGY,eAAe;IAJ3B,gBAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,kBAAa,yBAAyB,CAAA;KACvC,CAAC;6CAeyB,8BAAa;QACZ,uBAAc;QACpB,iBAAQ;QACV,eAAM;GAjBb,eAAe,CAgG3B;AAhGY,0CAAe","names":[],"sources":["/home/ali/exemple-jhipster/testbed/src/main/webapp/app/admin/audits/audits.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { DatePipe } from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { ITEMS_PER_PAGE } from 'app/shared/constants/pagination.constants';\nimport { Audit } from './audit.model';\nimport { AuditsService } from './audits.service';\n\n@Component({\n  selector: 'jhi-audit',\n  templateUrl: './audits.component.html'\n})\nexport class AuditsComponent implements OnInit {\n  audits?: Audit[];\n  fromDate = '';\n  itemsPerPage = ITEMS_PER_PAGE;\n  page!: number;\n  predicate!: string;\n  previousPage!: number;\n  ascending!: boolean;\n  toDate = '';\n  totalItems = 0;\n\n  private dateFormat = 'yyyy-MM-dd';\n\n  constructor(\n    private auditsService: AuditsService,\n    private activatedRoute: ActivatedRoute,\n    private datePipe: DatePipe,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.toDate = this.today();\n    this.fromDate = this.previousMonth();\n    this.activatedRoute.data.subscribe(data => {\n      this.page = data['pagingParams'].page;\n      this.previousPage = data['pagingParams'].page;\n      this.ascending = data['pagingParams'].ascending;\n      this.predicate = data['pagingParams'].predicate;\n      this.loadData();\n    });\n  }\n\n  loadPage(page: number): void {\n    if (page !== this.previousPage) {\n      this.previousPage = page;\n      this.transition();\n    }\n  }\n\n  canLoad(): boolean {\n    return this.fromDate !== '' && this.toDate !== '';\n  }\n\n  transition(): void {\n    if (this.canLoad()) {\n      this.router.navigate(['/admin/audits'], {\n        queryParams: {\n          page: this.page,\n          sort: this.predicate + ',' + (this.ascending ? 'asc' : 'desc')\n        }\n      });\n      this.loadData();\n    }\n  }\n\n  private previousMonth(): string {\n    let date = new Date();\n    if (date.getMonth() === 0) {\n      date = new Date(date.getFullYear() - 1, 11, date.getDate());\n    } else {\n      date = new Date(date.getFullYear(), date.getMonth() - 1, date.getDate());\n    }\n    return this.datePipe.transform(date, this.dateFormat)!;\n  }\n\n  private today(): string {\n    // Today + 1 day - needed if the current day must be included\n    const date = new Date();\n    date.setDate(date.getDate() + 1);\n    return this.datePipe.transform(date, this.dateFormat)!;\n  }\n\n  private loadData(): void {\n    this.auditsService\n      .query({\n        page: this.page - 1,\n        size: this.itemsPerPage,\n        sort: this.sort(),\n        fromDate: this.fromDate,\n        toDate: this.toDate\n      })\n      .subscribe((res: HttpResponse<Audit[]>) => this.onSuccess(res.body, res.headers));\n  }\n\n  private sort(): string[] {\n    const result = [this.predicate + ',' + (this.ascending ? 'asc' : 'desc')];\n    if (this.predicate !== 'id') {\n      result.push('id');\n    }\n    return result;\n  }\n\n  private onSuccess(audits: Audit[] | null, headers: HttpHeaders): void {\n    this.totalItems = Number(headers.get('X-Total-Count'));\n    this.audits = audits || [];\n  }\n}\n"],"version":3}