4994875bb774dabdc8094ab63dc88ec5
"use strict";

/* istanbul ignore next */
var cov_zdsa6qo9f = function () {
  var path = "/home/ali/exemple-jhipster/testbed/src/main/webapp/app/shared/alert/alert-error.component.ts";
  var hash = "ff5b8ab5ad4615325c0068ac46b84f740d0a56d2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ali/exemple-jhipster/testbed/src/main/webapp/app/shared/alert/alert-error.component.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 16
        },
        end: {
          line: 3,
          column: 32
        }
      },
      "2": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 39
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 45
        }
      },
      "4": {
        start: {
          line: 6,
          column: 22
        },
        end: {
          line: 6,
          column: 44
        }
      },
      "5": {
        start: {
          line: 7,
          column: 26
        },
        end: {
          line: 99,
          column: 1
        }
      },
      "6": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 41
        }
      },
      "7": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 41
        }
      },
      "8": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 25
        }
      },
      "9": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 15,
          column: 11
        }
      },
      "10": {
        start: {
          line: 13,
          column: 34
        },
        end: {
          line: 13,
          column: 50
        }
      },
      "11": {
        start: {
          line: 14,
          column: 12
        },
        end: {
          line: 14,
          column: 95
        }
      },
      "12": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 70,
          column: 11
        }
      },
      "13": {
        start: {
          line: 17,
          column: 38
        },
        end: {
          line: 17,
          column: 54
        }
      },
      "14": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 69,
          column: 13
        }
      },
      "15": {
        start: {
          line: 21,
          column: 20
        },
        end: {
          line: 21,
          column: 93
        }
      },
      "16": {
        start: {
          line: 22,
          column: 20
        },
        end: {
          line: 22,
          column: 26
        }
      },
      "17": {
        start: {
          line: 24,
          column: 32
        },
        end: {
          line: 24,
          column: 64
        }
      },
      "18": {
        start: {
          line: 25,
          column: 38
        },
        end: {
          line: 25,
          column: 42
        }
      },
      "19": {
        start: {
          line: 26,
          column: 36
        },
        end: {
          line: 26,
          column: 40
        }
      },
      "20": {
        start: {
          line: 27,
          column: 20
        },
        end: {
          line: 34,
          column: 23
        }
      },
      "21": {
        start: {
          line: 28,
          column: 24
        },
        end: {
          line: 33,
          column: 25
        }
      },
      "22": {
        start: {
          line: 29,
          column: 28
        },
        end: {
          line: 29,
          column: 79
        }
      },
      "23": {
        start: {
          line: 31,
          column: 29
        },
        end: {
          line: 33,
          column: 25
        }
      },
      "24": {
        start: {
          line: 32,
          column: 28
        },
        end: {
          line: 32,
          column: 77
        }
      },
      "25": {
        start: {
          line: 35,
          column: 20
        },
        end: {
          line: 56,
          column: 21
        }
      },
      "26": {
        start: {
          line: 36,
          column: 43
        },
        end: {
          line: 36,
          column: 104
        }
      },
      "27": {
        start: {
          line: 37,
          column: 24
        },
        end: {
          line: 37,
          column: 85
        }
      },
      "28": {
        start: {
          line: 39,
          column: 25
        },
        end: {
          line: 56,
          column: 21
        }
      },
      "29": {
        start: {
          line: 40,
          column: 44
        },
        end: {
          line: 40,
          column: 79
        }
      },
      "30": {
        start: {
          line: 41,
          column: 24
        },
        end: {
          line: 49,
          column: 25
        }
      },
      "31": {
        start: {
          line: 42,
          column: 28
        },
        end: {
          line: 44,
          column: 29
        }
      },
      "32": {
        start: {
          line: 43,
          column: 32
        },
        end: {
          line: 43,
          column: 60
        }
      },
      "33": {
        start: {
          line: 46,
          column: 51
        },
        end: {
          line: 46,
          column: 93
        }
      },
      "34": {
        start: {
          line: 47,
          column: 46
        },
        end: {
          line: 47,
          column: 134
        }
      },
      "35": {
        start: {
          line: 48,
          column: 28
        },
        end: {
          line: 48,
          column: 131
        }
      },
      "36": {
        start: {
          line: 51,
          column: 25
        },
        end: {
          line: 56,
          column: 21
        }
      },
      "37": {
        start: {
          line: 52,
          column: 24
        },
        end: {
          line: 52,
          column: 141
        }
      },
      "38": {
        start: {
          line: 55,
          column: 24
        },
        end: {
          line: 55,
          column: 68
        }
      },
      "39": {
        start: {
          line: 57,
          column: 20
        },
        end: {
          line: 57,
          column: 26
        }
      },
      "40": {
        start: {
          line: 60,
          column: 20
        },
        end: {
          line: 60,
          column: 75
        }
      },
      "41": {
        start: {
          line: 61,
          column: 20
        },
        end: {
          line: 61,
          column: 26
        }
      },
      "42": {
        start: {
          line: 63,
          column: 20
        },
        end: {
          line: 68,
          column: 21
        }
      },
      "43": {
        start: {
          line: 64,
          column: 24
        },
        end: {
          line: 64,
          column: 76
        }
      },
      "44": {
        start: {
          line: 67,
          column: 24
        },
        end: {
          line: 67,
          column: 68
        }
      },
      "45": {
        start: {
          line: 73,
          column: 24
        },
        end: {
          line: 73,
          column: 61
        }
      },
      "46": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "47": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 89
        }
      },
      "48": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 23
        }
      },
      "49": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 82,
          column: 9
        }
      },
      "50": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 58
        }
      },
      "51": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 85,
          column: 9
        }
      },
      "52": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 62
        }
      },
      "53": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 54
        }
      },
      "54": {
        start: {
          line: 89,
          column: 25
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "55": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 97,
          column: 76
        }
      },
      "56": {
        start: {
          line: 100,
          column: 0
        },
        end: {
          line: 114,
          column: 24
        }
      },
      "57": {
        start: {
          line: 115,
          column: 0
        },
        end: {
          line: 115,
          column: 50
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 5
          }
        },
        loc: {
          start: {
            line: 8,
            column: 62
          },
          end: {
            line: 71,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 74
          },
          end: {
            line: 12,
            column: 75
          }
        },
        loc: {
          start: {
            line: 12,
            column: 88
          },
          end: {
            line: 15,
            column: 9
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 82
          },
          end: {
            line: 16,
            column: 83
          }
        },
        loc: {
          start: {
            line: 16,
            column: 96
          },
          end: {
            line: 70,
            column: 9
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 27,
            column: 32
          },
          end: {
            line: 27,
            column: 33
          }
        },
        loc: {
          start: {
            line: 27,
            column: 41
          },
          end: {
            line: 34,
            column: 21
          }
        },
        line: 27
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        loc: {
          start: {
            line: 72,
            column: 22
          },
          end: {
            line: 78,
            column: 5
          }
        },
        line: 72
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        loc: {
          start: {
            line: 79,
            column: 18
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 79
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        },
        loc: {
          start: {
            line: 87,
            column: 38
          },
          end: {
            line: 98,
            column: 5
          }
        },
        line: 87
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 69,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 20,
            column: 16
          },
          end: {
            line: 22,
            column: 26
          }
        }, {
          start: {
            line: 23,
            column: 16
          },
          end: {
            line: 58,
            column: 17
          }
        }, {
          start: {
            line: 59,
            column: 16
          },
          end: {
            line: 61,
            column: 26
          }
        }, {
          start: {
            line: 62,
            column: 16
          },
          end: {
            line: 68,
            column: 21
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 24
          },
          end: {
            line: 33,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 24
          },
          end: {
            line: 33,
            column: 25
          }
        }, {
          start: {
            line: 28,
            column: 24
          },
          end: {
            line: 33,
            column: 25
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 29
          },
          end: {
            line: 33,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 29
          },
          end: {
            line: 33,
            column: 25
          }
        }, {
          start: {
            line: 31,
            column: 29
          },
          end: {
            line: 33,
            column: 25
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 35,
            column: 20
          },
          end: {
            line: 56,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 20
          },
          end: {
            line: 56,
            column: 21
          }
        }, {
          start: {
            line: 35,
            column: 20
          },
          end: {
            line: 56,
            column: 21
          }
        }],
        line: 35
      },
      "4": {
        loc: {
          start: {
            line: 39,
            column: 25
          },
          end: {
            line: 56,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 25
          },
          end: {
            line: 56,
            column: 21
          }
        }, {
          start: {
            line: 39,
            column: 25
          },
          end: {
            line: 56,
            column: 21
          }
        }],
        line: 39
      },
      "5": {
        loc: {
          start: {
            line: 39,
            column: 29
          },
          end: {
            line: 39,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 29
          },
          end: {
            line: 39,
            column: 59
          }
        }, {
          start: {
            line: 39,
            column: 63
          },
          end: {
            line: 39,
            column: 98
          }
        }],
        line: 39
      },
      "6": {
        loc: {
          start: {
            line: 42,
            column: 28
          },
          end: {
            line: 44,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 28
          },
          end: {
            line: 44,
            column: 29
          }
        }, {
          start: {
            line: 42,
            column: 28
          },
          end: {
            line: 44,
            column: 29
          }
        }],
        line: 42
      },
      "7": {
        loc: {
          start: {
            line: 51,
            column: 25
          },
          end: {
            line: 56,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 25
          },
          end: {
            line: 56,
            column: 21
          }
        }, {
          start: {
            line: 51,
            column: 25
          },
          end: {
            line: 56,
            column: 21
          }
        }],
        line: 51
      },
      "8": {
        loc: {
          start: {
            line: 51,
            column: 29
          },
          end: {
            line: 51,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 29
          },
          end: {
            line: 51,
            column: 59
          }
        }, {
          start: {
            line: 51,
            column: 63
          },
          end: {
            line: 51,
            column: 94
          }
        }],
        line: 51
      },
      "9": {
        loc: {
          start: {
            line: 63,
            column: 20
          },
          end: {
            line: 68,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 20
          },
          end: {
            line: 68,
            column: 21
          }
        }, {
          start: {
            line: 63,
            column: 20
          },
          end: {
            line: 68,
            column: 21
          }
        }],
        line: 63
      },
      "10": {
        loc: {
          start: {
            line: 63,
            column: 24
          },
          end: {
            line: 63,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 24
          },
          end: {
            line: 63,
            column: 54
          }
        }, {
          start: {
            line: 63,
            column: 58
          },
          end: {
            line: 63,
            column: 89
          }
        }],
        line: 63
      },
      "11": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        }, {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        }],
        line: 74
      },
      "12": {
        loc: {
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        }, {
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        }],
        line: 80
      },
      "13": {
        loc: {
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        }, {
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        }],
        line: 83
      },
      "14": {
        loc: {
          start: {
            line: 88,
            column: 18
          },
          end: {
            line: 88,
            column: 53
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 88,
            column: 40
          },
          end: {
            line: 88,
            column: 43
          }
        }, {
          start: {
            line: 88,
            column: 46
          },
          end: {
            line: 88,
            column: 53
          }
        }],
        line: 88
      },
      "15": {
        loc: {
          start: {
            line: 88,
            column: 18
          },
          end: {
            line: 88,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 18
          },
          end: {
            line: 88,
            column: 21
          }
        }, {
          start: {
            line: 88,
            column: 25
          },
          end: {
            line: 88,
            column: 37
          }
        }],
        line: 88
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "ff5b8ab5ad4615325c0068ac46b84f740d0a56d2"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

cov_zdsa6qo9f.s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const tslib_1 =
/* istanbul ignore next */
(cov_zdsa6qo9f.s[1]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_zdsa6qo9f.s[2]++, require("@angular/core"));
const core_2 =
/* istanbul ignore next */
(cov_zdsa6qo9f.s[3]++, require("@ngx-translate/core"));
const ng_jhipster_1 =
/* istanbul ignore next */
(cov_zdsa6qo9f.s[4]++, require("ng-jhipster"));

/* istanbul ignore next */
cov_zdsa6qo9f.s[5]++;
let AlertErrorComponent = class AlertErrorComponent {
  constructor(alertService, eventManager, translateService) {
    /* istanbul ignore next */
    cov_zdsa6qo9f.f[0]++;
    cov_zdsa6qo9f.s[6]++;
    this.alertService = alertService;

    /* istanbul ignore next */
    cov_zdsa6qo9f.s[7]++;
    this.eventManager = eventManager;

    /* istanbul ignore next */
    cov_zdsa6qo9f.s[8]++;
    this.alerts = [];

    /* istanbul ignore next */
    cov_zdsa6qo9f.s[9]++;
    this.errorListener = eventManager.subscribe('coopcycleApp.error', response => {
      /* istanbul ignore next */
      cov_zdsa6qo9f.f[1]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_zdsa6qo9f.s[10]++, response.content);

      /* istanbul ignore next */
      cov_zdsa6qo9f.s[11]++;
      this.addErrorAlert(errorResponse.message, errorResponse.key, errorResponse.params);
    });

    /* istanbul ignore next */
    cov_zdsa6qo9f.s[12]++;
    this.httpErrorListener = eventManager.subscribe('coopcycleApp.httpError', response => {
      /* istanbul ignore next */
      cov_zdsa6qo9f.f[2]++;
      const httpErrorResponse =
      /* istanbul ignore next */
      (cov_zdsa6qo9f.s[13]++, response.content);

      /* istanbul ignore next */
      cov_zdsa6qo9f.s[14]++;

      switch (httpErrorResponse.status) {
        // connection refused, server not reachable
        case 0:
          /* istanbul ignore next */
          cov_zdsa6qo9f.b[0][0]++;
          cov_zdsa6qo9f.s[15]++;
          this.addErrorAlert('Server not reachable', 'error.server.not.reachable');

          /* istanbul ignore next */
          cov_zdsa6qo9f.s[16]++;
          break;

        case 400:
          /* istanbul ignore next */
          cov_zdsa6qo9f.b[0][1]++;
          {
            const arr =
            /* istanbul ignore next */
            (cov_zdsa6qo9f.s[17]++, httpErrorResponse.headers.keys());
            let errorHeader =
            /* istanbul ignore next */
            (cov_zdsa6qo9f.s[18]++, null);
            let entityKey =
            /* istanbul ignore next */
            (cov_zdsa6qo9f.s[19]++, null);

            /* istanbul ignore next */
            cov_zdsa6qo9f.s[20]++;
            arr.forEach(entry => {
              /* istanbul ignore next */
              cov_zdsa6qo9f.f[3]++;
              cov_zdsa6qo9f.s[21]++;

              if (entry.toLowerCase().endsWith('app-error')) {
                /* istanbul ignore next */
                cov_zdsa6qo9f.b[1][0]++;
                cov_zdsa6qo9f.s[22]++;
                errorHeader = httpErrorResponse.headers.get(entry);
              } else {
                /* istanbul ignore next */
                cov_zdsa6qo9f.b[1][1]++;
                cov_zdsa6qo9f.s[23]++;

                if (entry.toLowerCase().endsWith('app-params')) {
                  /* istanbul ignore next */
                  cov_zdsa6qo9f.b[2][0]++;
                  cov_zdsa6qo9f.s[24]++;
                  entityKey = httpErrorResponse.headers.get(entry);
                } else
                /* istanbul ignore next */
                {
                  cov_zdsa6qo9f.b[2][1]++;
                }
              }
            });

            /* istanbul ignore next */
            cov_zdsa6qo9f.s[25]++;

            if (errorHeader) {
              /* istanbul ignore next */
              cov_zdsa6qo9f.b[3][0]++;
              const entityName =
              /* istanbul ignore next */
              (cov_zdsa6qo9f.s[26]++, translateService.instant('global.menu.entities.' + entityKey));

              /* istanbul ignore next */
              cov_zdsa6qo9f.s[27]++;
              this.addErrorAlert(errorHeader, errorHeader, {
                entityName
              });
            } else {
              /* istanbul ignore next */
              cov_zdsa6qo9f.b[3][1]++;
              cov_zdsa6qo9f.s[28]++;

              if (
              /* istanbul ignore next */
              (cov_zdsa6qo9f.b[5][0]++, httpErrorResponse.error !== '') &&
              /* istanbul ignore next */
              (cov_zdsa6qo9f.b[5][1]++, httpErrorResponse.error.fieldErrors)) {
                /* istanbul ignore next */
                cov_zdsa6qo9f.b[4][0]++;
                const fieldErrors =
                /* istanbul ignore next */
                (cov_zdsa6qo9f.s[29]++, httpErrorResponse.error.fieldErrors);

                /* istanbul ignore next */
                cov_zdsa6qo9f.s[30]++;

                for (const fieldError of fieldErrors) {
                  /* istanbul ignore next */
                  cov_zdsa6qo9f.s[31]++;

                  if (['Min', 'Max', 'DecimalMin', 'DecimalMax'].includes(fieldError.message)) {
                    /* istanbul ignore next */
                    cov_zdsa6qo9f.b[6][0]++;
                    cov_zdsa6qo9f.s[32]++;
                    fieldError.message = 'Size';
                  } else
                  /* istanbul ignore next */
                  {
                    cov_zdsa6qo9f.b[6][1]++;
                  } // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it


                  const convertedField =
                  /* istanbul ignore next */
                  (cov_zdsa6qo9f.s[33]++, fieldError.field.replace(/\[\d*\]/g, '[]'));
                  const fieldName =
                  /* istanbul ignore next */
                  (cov_zdsa6qo9f.s[34]++, translateService.instant('coopcycleApp.' + fieldError.objectName + '.' + convertedField));

                  /* istanbul ignore next */
                  cov_zdsa6qo9f.s[35]++;
                  this.addErrorAlert('Error on field "' + fieldName + '"', 'error.' + fieldError.message, {
                    fieldName
                  });
                }
              } else {
                /* istanbul ignore next */
                cov_zdsa6qo9f.b[4][1]++;
                cov_zdsa6qo9f.s[36]++;

                if (
                /* istanbul ignore next */
                (cov_zdsa6qo9f.b[8][0]++, httpErrorResponse.error !== '') &&
                /* istanbul ignore next */
                (cov_zdsa6qo9f.b[8][1]++, httpErrorResponse.error.message)) {
                  /* istanbul ignore next */
                  cov_zdsa6qo9f.b[7][0]++;
                  cov_zdsa6qo9f.s[37]++;
                  this.addErrorAlert(httpErrorResponse.error.message, httpErrorResponse.error.message, httpErrorResponse.error.params);
                } else {
                  /* istanbul ignore next */
                  cov_zdsa6qo9f.b[7][1]++;
                  cov_zdsa6qo9f.s[38]++;
                  this.addErrorAlert(httpErrorResponse.error);
                }
              }
            }

            /* istanbul ignore next */
            cov_zdsa6qo9f.s[39]++;
            break;
          }

        case 404:
          /* istanbul ignore next */
          cov_zdsa6qo9f.b[0][2]++;
          cov_zdsa6qo9f.s[40]++;
          this.addErrorAlert('Not found', 'error.url.not.found');

          /* istanbul ignore next */
          cov_zdsa6qo9f.s[41]++;
          break;

        default:
          /* istanbul ignore next */
          cov_zdsa6qo9f.b[0][3]++;
          cov_zdsa6qo9f.s[42]++;

          if (
          /* istanbul ignore next */
          (cov_zdsa6qo9f.b[10][0]++, httpErrorResponse.error !== '') &&
          /* istanbul ignore next */
          (cov_zdsa6qo9f.b[10][1]++, httpErrorResponse.error.message)) {
            /* istanbul ignore next */
            cov_zdsa6qo9f.b[9][0]++;
            cov_zdsa6qo9f.s[43]++;
            this.addErrorAlert(httpErrorResponse.error.message);
          } else {
            /* istanbul ignore next */
            cov_zdsa6qo9f.b[9][1]++;
            cov_zdsa6qo9f.s[44]++;
            this.addErrorAlert(httpErrorResponse.error);
          }

      }
    });
  }

  setClasses(alert) {
    /* istanbul ignore next */
    cov_zdsa6qo9f.f[4]++;
    const classes =
    /* istanbul ignore next */
    (cov_zdsa6qo9f.s[45]++, {
      'jhi-toast': Boolean(alert.toast)
    });

    /* istanbul ignore next */
    cov_zdsa6qo9f.s[46]++;

    if (alert.position) {
      /* istanbul ignore next */
      cov_zdsa6qo9f.b[11][0]++;
      cov_zdsa6qo9f.s[47]++;
      return Object.assign(Object.assign({}, classes), {
        [alert.position]: true
      });
    } else
    /* istanbul ignore next */
    {
      cov_zdsa6qo9f.b[11][1]++;
    }

    cov_zdsa6qo9f.s[48]++;
    return classes;
  }

  ngOnDestroy() {
    /* istanbul ignore next */
    cov_zdsa6qo9f.f[5]++;
    cov_zdsa6qo9f.s[49]++;

    if (this.errorListener) {
      /* istanbul ignore next */
      cov_zdsa6qo9f.b[12][0]++;
      cov_zdsa6qo9f.s[50]++;
      this.eventManager.destroy(this.errorListener);
    } else
    /* istanbul ignore next */
    {
      cov_zdsa6qo9f.b[12][1]++;
    }

    cov_zdsa6qo9f.s[51]++;

    if (this.httpErrorListener) {
      /* istanbul ignore next */
      cov_zdsa6qo9f.b[13][0]++;
      cov_zdsa6qo9f.s[52]++;
      this.eventManager.destroy(this.httpErrorListener);
    } else
    /* istanbul ignore next */
    {
      cov_zdsa6qo9f.b[13][1]++;
    }
  }

  addErrorAlert(message, key, data) {
    /* istanbul ignore next */
    cov_zdsa6qo9f.f[6]++;
    cov_zdsa6qo9f.s[53]++;
    message =
    /* istanbul ignore next */
    (cov_zdsa6qo9f.b[15][0]++, key) &&
    /* istanbul ignore next */
    (cov_zdsa6qo9f.b[15][1]++, key !== null) ?
    /* istanbul ignore next */
    (cov_zdsa6qo9f.b[14][0]++, key) :
    /* istanbul ignore next */
    (cov_zdsa6qo9f.b[14][1]++, message);
    const newAlert =
    /* istanbul ignore next */
    (cov_zdsa6qo9f.s[54]++, {
      type: 'danger',
      msg: message,
      params: data,
      timeout: 5000,
      toast: this.alertService.isToast(),
      scoped: true
    });

    /* istanbul ignore next */
    cov_zdsa6qo9f.s[55]++;
    this.alerts.push(this.alertService.addAlert(newAlert, this.alerts));
  }

};

/* istanbul ignore next */
cov_zdsa6qo9f.s[56]++;
AlertErrorComponent = tslib_1.__decorate([core_1.Component({
  selector: 'jhi-alert-error',
  template: `
    <div class="alerts" role="alert">
      <div *ngFor="let alert of alerts" [ngClass]="setClasses(alert)">
        <ngb-alert *ngIf="alert && alert.type && alert.msg" [type]="alert.type" (close)="alert.close(alerts)">
          <pre [innerHTML]="alert.msg"></pre>
        </ngb-alert>
      </div>
    </div>
  `
}), tslib_1.__metadata("design:paramtypes", [ng_jhipster_1.JhiAlertService, ng_jhipster_1.JhiEventManager, core_2.TranslateService])], AlertErrorComponent);

/* istanbul ignore next */
cov_zdsa6qo9f.s[57]++;
exports.AlertErrorComponent = AlertErrorComponent;