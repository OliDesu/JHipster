{"file":"/home/ali/exemple-jhipster/testbed/src/main/webapp/app/entities/basket/basket-update.component.ts","mappings":"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","names":[],"sources":["/home/ali/exemple-jhipster/testbed/src/main/webapp/app/entities/basket/basket-update.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { IBasket, Basket } from 'app/shared/model/basket.model';\nimport { BasketService } from './basket.service';\nimport { IUser } from 'app/core/user/user.model';\nimport { UserService } from 'app/core/user/user.service';\nimport { ICourse } from 'app/shared/model/course.model';\nimport { CourseService } from 'app/entities/course/course.service';\n\ntype SelectableEntity = IUser | ICourse;\n\n@Component({\n  selector: 'jhi-basket-update',\n  templateUrl: './basket-update.component.html'\n})\nexport class BasketUpdateComponent implements OnInit {\n  isSaving = false;\n  users: IUser[] = [];\n  courses: ICourse[] = [];\n\n  editForm = this.fb.group({\n    id: [],\n    basketId: [null, [Validators.required]],\n    basketState: [null, [Validators.required]],\n    user: [],\n    course: [],\n    customer: []\n  });\n\n  constructor(\n    protected basketService: BasketService,\n    protected userService: UserService,\n    protected courseService: CourseService,\n    protected activatedRoute: ActivatedRoute,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.activatedRoute.data.subscribe(({ basket }) => {\n      this.updateForm(basket);\n\n      this.userService.query().subscribe((res: HttpResponse<IUser[]>) => (this.users = res.body || []));\n\n      this.courseService\n        .query({ filter: 'basket-is-null' })\n        .pipe(\n          map((res: HttpResponse<ICourse[]>) => {\n            return res.body || [];\n          })\n        )\n        .subscribe((resBody: ICourse[]) => {\n          if (!basket.course || !basket.course.id) {\n            this.courses = resBody;\n          } else {\n            this.courseService\n              .find(basket.course.id)\n              .pipe(\n                map((subRes: HttpResponse<ICourse>) => {\n                  return subRes.body ? [subRes.body].concat(resBody) : resBody;\n                })\n              )\n              .subscribe((concatRes: ICourse[]) => (this.courses = concatRes));\n          }\n        });\n    });\n  }\n\n  updateForm(basket: IBasket): void {\n    this.editForm.patchValue({\n      id: basket.id,\n      basketId: basket.basketId,\n      basketState: basket.basketState,\n      user: basket.user,\n      course: basket.course,\n      customer: basket.customer\n    });\n  }\n\n  previousState(): void {\n    window.history.back();\n  }\n\n  save(): void {\n    this.isSaving = true;\n    const basket = this.createFromForm();\n    if (basket.id !== undefined) {\n      this.subscribeToSaveResponse(this.basketService.update(basket));\n    } else {\n      this.subscribeToSaveResponse(this.basketService.create(basket));\n    }\n  }\n\n  private createFromForm(): IBasket {\n    return {\n      ...new Basket(),\n      id: this.editForm.get(['id'])!.value,\n      basketId: this.editForm.get(['basketId'])!.value,\n      basketState: this.editForm.get(['basketState'])!.value,\n      user: this.editForm.get(['user'])!.value,\n      course: this.editForm.get(['course'])!.value,\n      customer: this.editForm.get(['customer'])!.value\n    };\n  }\n\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<IBasket>>): void {\n    result.subscribe(\n      () => this.onSaveSuccess(),\n      () => this.onSaveError()\n    );\n  }\n\n  protected onSaveSuccess(): void {\n    this.isSaving = false;\n    this.previousState();\n  }\n\n  protected onSaveError(): void {\n    this.isSaving = false;\n  }\n\n  trackById(index: number, item: SelectableEntity): any {\n    return item.id;\n  }\n}\n"],"version":3}