{"file":"/home/ali/exemple-jhipster/testbed/src/main/webapp/app/entities/restaurant/restaurant-update.component.ts","mappings":"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","names":[],"sources":["/home/ali/exemple-jhipster/testbed/src/main/webapp/app/entities/restaurant/restaurant-update.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { IRestaurant, Restaurant } from 'app/shared/model/restaurant.model';\nimport { RestaurantService } from './restaurant.service';\n\n@Component({\n  selector: 'jhi-restaurant-update',\n  templateUrl: './restaurant-update.component.html'\n})\nexport class RestaurantUpdateComponent implements OnInit {\n  isSaving = false;\n\n  editForm = this.fb.group({\n    id: [],\n    restaurantId: [null, [Validators.required]],\n    name: [null, [Validators.required]],\n    description: []\n  });\n\n  constructor(protected restaurantService: RestaurantService, protected activatedRoute: ActivatedRoute, private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.activatedRoute.data.subscribe(({ restaurant }) => {\n      this.updateForm(restaurant);\n    });\n  }\n\n  updateForm(restaurant: IRestaurant): void {\n    this.editForm.patchValue({\n      id: restaurant.id,\n      restaurantId: restaurant.restaurantId,\n      name: restaurant.name,\n      description: restaurant.description\n    });\n  }\n\n  previousState(): void {\n    window.history.back();\n  }\n\n  save(): void {\n    this.isSaving = true;\n    const restaurant = this.createFromForm();\n    if (restaurant.id !== undefined) {\n      this.subscribeToSaveResponse(this.restaurantService.update(restaurant));\n    } else {\n      this.subscribeToSaveResponse(this.restaurantService.create(restaurant));\n    }\n  }\n\n  private createFromForm(): IRestaurant {\n    return {\n      ...new Restaurant(),\n      id: this.editForm.get(['id'])!.value,\n      restaurantId: this.editForm.get(['restaurantId'])!.value,\n      name: this.editForm.get(['name'])!.value,\n      description: this.editForm.get(['description'])!.value\n    };\n  }\n\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<IRestaurant>>): void {\n    result.subscribe(\n      () => this.onSaveSuccess(),\n      () => this.onSaveError()\n    );\n  }\n\n  protected onSaveSuccess(): void {\n    this.isSaving = false;\n    this.previousState();\n  }\n\n  protected onSaveError(): void {\n    this.isSaving = false;\n  }\n}\n"],"version":3}