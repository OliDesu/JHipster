{"file":"/home/ali/exemple-jhipster/testbed/src/main/webapp/app/admin/health/health.service.ts","mappings":";;;AAAA,wCAA2C;AAC3C,+CAAkD;AAGlD,qDAAmD;AAmBnD,IAAa,aAAa,GAA1B,MAAa,aAAa;IACxB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,8BAAc,GAAG,mBAAmB,CAAC,CAAC;IACrE,CAAC;CACF,CAAA;AANY,aAAa;IADzB,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;6CAEP,iBAAU;GADzB,aAAa,CAMzB;AANY,sCAAa","names":[],"sources":["/home/ali/exemple-jhipster/testbed/src/main/webapp/app/admin/health/health.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { SERVER_API_URL } from 'app/app.constants';\n\nexport type HealthStatus = 'UP' | 'DOWN' | 'UNKNOWN' | 'OUT_OF_SERVICE';\n\nexport type HealthKey = 'diskSpace' | 'mail' | 'ping' | 'db';\n\nexport interface Health {\n  status: HealthStatus;\n  components: {\n    [key in HealthKey]?: HealthDetails;\n  };\n}\n\nexport interface HealthDetails {\n  status: HealthStatus;\n  details: any;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HealthService {\n  constructor(private http: HttpClient) {}\n\n  checkHealth(): Observable<Health> {\n    return this.http.get<Health>(SERVER_API_URL + 'management/health');\n  }\n}\n"],"version":3}