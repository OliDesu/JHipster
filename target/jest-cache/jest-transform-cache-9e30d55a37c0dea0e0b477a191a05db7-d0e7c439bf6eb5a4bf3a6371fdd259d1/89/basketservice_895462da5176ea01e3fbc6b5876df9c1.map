{"file":"/home/ali/exemple-jhipster/testbed/src/main/webapp/app/entities/basket/basket.service.ts","mappings":";;;AAAA,wCAA2C;AAC3C,+CAAgE;AAGhE,qDAAmD;AACnD,+DAAmE;AAOnE,IAAa,aAAa,GAA1B,MAAa,aAAa;IAGxB,YAAsB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF/B,gBAAW,GAAG,8BAAc,GAAG,aAAa,CAAC;IAEX,CAAC;IAE1C,MAAM,CAAC,MAAe;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAU,IAAI,CAAC,WAAW,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACpF,CAAC;IAED,MAAM,CAAC,MAAe;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,WAAW,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACnF,CAAC;IAED,IAAI,CAAC,EAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACtF,CAAC;IAED,KAAK,CAAC,GAAS;QACb,MAAM,OAAO,GAAG,kCAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC9F,CAAC;IAED,MAAM,CAAC,EAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChF,CAAC;CACF,CAAA;AAzBY,aAAa;IADzB,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;6CAIL,iBAAU;GAH3B,aAAa,CAyBzB;AAzBY,sCAAa","names":[],"sources":["/home/ali/exemple-jhipster/testbed/src/main/webapp/app/entities/basket/basket.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { createRequestOption } from 'app/shared/util/request-util';\nimport { IBasket } from 'app/shared/model/basket.model';\n\ntype EntityResponseType = HttpResponse<IBasket>;\ntype EntityArrayResponseType = HttpResponse<IBasket[]>;\n\n@Injectable({ providedIn: 'root' })\nexport class BasketService {\n  public resourceUrl = SERVER_API_URL + 'api/baskets';\n\n  constructor(protected http: HttpClient) {}\n\n  create(basket: IBasket): Observable<EntityResponseType> {\n    return this.http.post<IBasket>(this.resourceUrl, basket, { observe: 'response' });\n  }\n\n  update(basket: IBasket): Observable<EntityResponseType> {\n    return this.http.put<IBasket>(this.resourceUrl, basket, { observe: 'response' });\n  }\n\n  find(id: number): Observable<EntityResponseType> {\n    return this.http.get<IBasket>(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  query(req?: any): Observable<EntityArrayResponseType> {\n    const options = createRequestOption(req);\n    return this.http.get<IBasket[]>(this.resourceUrl, { params: options, observe: 'response' });\n  }\n\n  delete(id: number): Observable<HttpResponse<{}>> {\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n}\n"],"version":3}