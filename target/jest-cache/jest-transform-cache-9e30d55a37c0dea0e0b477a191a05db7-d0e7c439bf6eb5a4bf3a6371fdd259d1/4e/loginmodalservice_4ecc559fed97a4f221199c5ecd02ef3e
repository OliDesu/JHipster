5789980cd06fab7333d60373938db3a2
"use strict";

/* istanbul ignore next */
var cov_1dhfxfqey9 = function () {
  var path = "/home/ali/exemple-jhipster/testbed/src/main/webapp/app/core/login/login-modal.service.ts";
  var hash = "b23ce963d9fa4cba804e1d569f6ccdf5895a523c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ali/exemple-jhipster/testbed/src/main/webapp/app/core/login/login-modal.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 16
        },
        end: {
          line: 3,
          column: 32
        }
      },
      "2": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 39
        }
      },
      "3": {
        start: {
          line: 5,
          column: 23
        },
        end: {
          line: 5,
          column: 60
        }
      },
      "4": {
        start: {
          line: 6,
          column: 26
        },
        end: {
          line: 6,
          column: 69
        }
      },
      "5": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 20,
          column: 1
        }
      },
      "6": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 41
        }
      },
      "7": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 28
        }
      },
      "8": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 15,
          column: 9
        }
      },
      "9": {
        start: {
          line: 14,
          column: 12
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "10": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 27
        }
      },
      "11": {
        start: {
          line: 17,
          column: 25
        },
        end: {
          line: 17,
          column: 86
        }
      },
      "12": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 61
        }
      },
      "13": {
        start: {
          line: 18,
          column: 39
        },
        end: {
          line: 18,
          column: 58
        }
      },
      "14": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 24,
          column: 22
        }
      },
      "15": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 5
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 11,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 11
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 32
          },
          end: {
            line: 18,
            column: 33
          }
        },
        loc: {
          start: {
            line: 18,
            column: 39
          },
          end: {
            line: 18,
            column: 58
          }
        },
        line: 18
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 8
          },
          end: {
            line: 15,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 13,
            column: 8
          },
          end: {
            line: 15,
            column: 9
          }
        }, {
          start: {
            line: 13,
            column: 8
          },
          end: {
            line: 15,
            column: 9
          }
        }],
        line: 13
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "b23ce963d9fa4cba804e1d569f6ccdf5895a523c"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

cov_1dhfxfqey9.s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const tslib_1 =
/* istanbul ignore next */
(cov_1dhfxfqey9.s[1]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_1dhfxfqey9.s[2]++, require("@angular/core"));
const ng_bootstrap_1 =
/* istanbul ignore next */
(cov_1dhfxfqey9.s[3]++, require("@ng-bootstrap/ng-bootstrap"));
const login_component_1 =
/* istanbul ignore next */
(cov_1dhfxfqey9.s[4]++, require("app/shared/login/login.component"));

/* istanbul ignore next */
cov_1dhfxfqey9.s[5]++;
let LoginModalService = class LoginModalService {
  constructor(modalService) {
    /* istanbul ignore next */
    cov_1dhfxfqey9.f[0]++;
    cov_1dhfxfqey9.s[6]++;
    this.modalService = modalService;

    /* istanbul ignore next */
    cov_1dhfxfqey9.s[7]++;
    this.isOpen = false;
  }

  open() {
    /* istanbul ignore next */
    cov_1dhfxfqey9.f[1]++;
    cov_1dhfxfqey9.s[8]++;

    if (this.isOpen) {
      /* istanbul ignore next */
      cov_1dhfxfqey9.b[0][0]++;
      cov_1dhfxfqey9.s[9]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1dhfxfqey9.b[0][1]++;
    }

    cov_1dhfxfqey9.s[10]++;
    this.isOpen = true;
    const modalRef =
    /* istanbul ignore next */
    (cov_1dhfxfqey9.s[11]++, this.modalService.open(login_component_1.LoginModalComponent));

    /* istanbul ignore next */
    cov_1dhfxfqey9.s[12]++;
    modalRef.result.finally(() => {
      /* istanbul ignore next */
      cov_1dhfxfqey9.f[2]++;
      cov_1dhfxfqey9.s[13]++;
      return this.isOpen = false;
    });
  }

};

/* istanbul ignore next */
cov_1dhfxfqey9.s[14]++;
LoginModalService = tslib_1.__decorate([core_1.Injectable({
  providedIn: 'root'
}), tslib_1.__metadata("design:paramtypes", [ng_bootstrap_1.NgbModal])], LoginModalService);

/* istanbul ignore next */
cov_1dhfxfqey9.s[15]++;
exports.LoginModalService = LoginModalService;