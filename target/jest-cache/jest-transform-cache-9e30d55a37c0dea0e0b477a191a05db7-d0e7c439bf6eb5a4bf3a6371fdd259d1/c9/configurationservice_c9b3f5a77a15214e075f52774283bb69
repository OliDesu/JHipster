9c635ab8f6a19bb3a14c7e987f8e214d
"use strict";

/* istanbul ignore next */
var cov_1uq8afipca = function () {
  var path = "/home/ali/exemple-jhipster/testbed/src/main/webapp/app/admin/configuration/configuration.service.ts";
  var hash = "b0c5a2ee0881ba55623a97d7c05c5fe4e18fc10c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ali/exemple-jhipster/testbed/src/main/webapp/app/admin/configuration/configuration.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 16
        },
        end: {
          line: 3,
          column: 32
        }
      },
      "2": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 39
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 46
        }
      },
      "4": {
        start: {
          line: 6,
          column: 20
        },
        end: {
          line: 6,
          column: 45
        }
      },
      "5": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 7,
          column: 52
        }
      },
      "6": {
        start: {
          line: 8,
          column: 27
        },
        end: {
          line: 20,
          column: 1
        }
      },
      "7": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 25
        }
      },
      "8": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 15,
          column: 111
        }
      },
      "9": {
        start: {
          line: 13,
          column: 124
        },
        end: {
          line: 15,
          column: 108
        }
      },
      "10": {
        start: {
          line: 14,
          column: 28
        },
        end: {
          line: 14,
          column: 41
        }
      },
      "11": {
        start: {
          line: 15,
          column: 49
        },
        end: {
          line: 15,
          column: 105
        }
      },
      "12": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 130
        }
      },
      "13": {
        start: {
          line: 18,
          column: 108
        },
        end: {
          line: 18,
          column: 127
        }
      },
      "14": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 24,
          column: 25
        }
      },
      "15": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 52
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 22
          },
          end: {
            line: 11,
            column: 5
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 15
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 13,
            column: 109
          },
          end: {
            line: 13,
            column: 110
          }
        },
        loc: {
          start: {
            line: 13,
            column: 124
          },
          end: {
            line: 15,
            column: 108
          }
        },
        line: 13
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 14,
            column: 17
          },
          end: {
            line: 14,
            column: 18
          }
        },
        loc: {
          start: {
            line: 14,
            column: 28
          },
          end: {
            line: 14,
            column: 41
          }
        },
        line: 14
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 15,
            column: 21
          }
        },
        loc: {
          start: {
            line: 15,
            column: 49
          },
          end: {
            line: 15,
            column: 105
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 25
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 18,
            column: 101
          },
          end: {
            line: 18,
            column: 102
          }
        },
        loc: {
          start: {
            line: 18,
            column: 108
          },
          end: {
            line: 18,
            column: 127
          }
        },
        line: 18
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {},
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "b0c5a2ee0881ba55623a97d7c05c5fe4e18fc10c"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

cov_1uq8afipca.s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const tslib_1 =
/* istanbul ignore next */
(cov_1uq8afipca.s[1]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_1uq8afipca.s[2]++, require("@angular/core"));
const http_1 =
/* istanbul ignore next */
(cov_1uq8afipca.s[3]++, require("@angular/common/http"));
const operators_1 =
/* istanbul ignore next */
(cov_1uq8afipca.s[4]++, require("rxjs/operators"));
const app_constants_1 =
/* istanbul ignore next */
(cov_1uq8afipca.s[5]++, require("app/app.constants"));

/* istanbul ignore next */
cov_1uq8afipca.s[6]++;
let ConfigurationService = class ConfigurationService {
  constructor(http) {
    /* istanbul ignore next */
    cov_1uq8afipca.f[0]++;
    cov_1uq8afipca.s[7]++;
    this.http = http;
  }

  getBeans() {
    /* istanbul ignore next */
    cov_1uq8afipca.f[1]++;
    cov_1uq8afipca.s[8]++;
    return this.http.get(app_constants_1.SERVER_API_URL + 'management/configprops').pipe(operators_1.map(configProps => {
      /* istanbul ignore next */
      cov_1uq8afipca.f[2]++;
      cov_1uq8afipca.s[9]++;
      return Object.values(Object.values(configProps.contexts).map(context => {
        /* istanbul ignore next */
        cov_1uq8afipca.f[3]++;
        cov_1uq8afipca.s[10]++;
        return context.beans;
      }).reduce((allBeans, contextBeans) => {
        /* istanbul ignore next */
        cov_1uq8afipca.f[4]++;
        cov_1uq8afipca.s[11]++;
        return Object.assign(Object.assign({}, allBeans), contextBeans);
      }));
    }));
  }

  getPropertySources() {
    /* istanbul ignore next */
    cov_1uq8afipca.f[5]++;
    cov_1uq8afipca.s[12]++;
    return this.http.get(app_constants_1.SERVER_API_URL + 'management/env').pipe(operators_1.map(env => {
      /* istanbul ignore next */
      cov_1uq8afipca.f[6]++;
      cov_1uq8afipca.s[13]++;
      return env.propertySources;
    }));
  }

};

/* istanbul ignore next */
cov_1uq8afipca.s[14]++;
ConfigurationService = tslib_1.__decorate([core_1.Injectable({
  providedIn: 'root'
}), tslib_1.__metadata("design:paramtypes", [http_1.HttpClient])], ConfigurationService);

/* istanbul ignore next */
cov_1uq8afipca.s[15]++;
exports.ConfigurationService = ConfigurationService;