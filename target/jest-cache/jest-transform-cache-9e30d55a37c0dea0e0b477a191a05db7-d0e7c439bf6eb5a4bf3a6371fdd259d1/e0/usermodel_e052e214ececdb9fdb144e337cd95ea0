59aea49adee151b16cd6b175ac417c33
"use strict";

/* istanbul ignore next */
var cov_1zn3s0xpv5 = function () {
  var path = "/home/ali/exemple-jhipster/testbed/src/main/webapp/app/core/user/user.model.ts";
  var hash = "7aba6535c533d9ad32f31007c62b0c97ccbe02f9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ali/exemple-jhipster/testbed/src/main/webapp/app/core/user/user.model.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 5,
          column: 8
        },
        end: {
          line: 5,
          column: 21
        }
      },
      "2": {
        start: {
          line: 6,
          column: 8
        },
        end: {
          line: 6,
          column: 27
        }
      },
      "3": {
        start: {
          line: 7,
          column: 8
        },
        end: {
          line: 7,
          column: 35
        }
      },
      "4": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 33
        }
      },
      "5": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 27
        }
      },
      "6": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 35
        }
      },
      "7": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 31
        }
      },
      "8": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 39
        }
      },
      "9": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 35
        }
      },
      "10": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 39
        }
      },
      "11": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 45
        }
      },
      "12": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 49
        }
      },
      "13": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 33
        }
      },
      "14": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 20,
          column: 20
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 4,
            column: 5
          }
        },
        loc: {
          start: {
            line: 4,
            column: 156
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 4
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "7aba6535c533d9ad32f31007c62b0c97ccbe02f9"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

cov_1zn3s0xpv5.s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

class User {
  constructor(id, login, firstName, lastName, email, activated, langKey, authorities, createdBy, createdDate, lastModifiedBy, lastModifiedDate, password) {
    /* istanbul ignore next */
    cov_1zn3s0xpv5.f[0]++;
    cov_1zn3s0xpv5.s[1]++;
    this.id = id;

    /* istanbul ignore next */
    cov_1zn3s0xpv5.s[2]++;
    this.login = login;

    /* istanbul ignore next */
    cov_1zn3s0xpv5.s[3]++;
    this.firstName = firstName;

    /* istanbul ignore next */
    cov_1zn3s0xpv5.s[4]++;
    this.lastName = lastName;

    /* istanbul ignore next */
    cov_1zn3s0xpv5.s[5]++;
    this.email = email;

    /* istanbul ignore next */
    cov_1zn3s0xpv5.s[6]++;
    this.activated = activated;

    /* istanbul ignore next */
    cov_1zn3s0xpv5.s[7]++;
    this.langKey = langKey;

    /* istanbul ignore next */
    cov_1zn3s0xpv5.s[8]++;
    this.authorities = authorities;

    /* istanbul ignore next */
    cov_1zn3s0xpv5.s[9]++;
    this.createdBy = createdBy;

    /* istanbul ignore next */
    cov_1zn3s0xpv5.s[10]++;
    this.createdDate = createdDate;

    /* istanbul ignore next */
    cov_1zn3s0xpv5.s[11]++;
    this.lastModifiedBy = lastModifiedBy;

    /* istanbul ignore next */
    cov_1zn3s0xpv5.s[12]++;
    this.lastModifiedDate = lastModifiedDate;

    /* istanbul ignore next */
    cov_1zn3s0xpv5.s[13]++;
    this.password = password;
  }

}

/* istanbul ignore next */
cov_1zn3s0xpv5.s[14]++;
exports.User = User;