7b1c4a3efe38a0d4efb534c686fd67c5
"use strict";

/* istanbul ignore next */
var cov_1w4il31che = function () {
  var path = "/home/ali/exemple-jhipster/testbed/src/main/webapp/app/entities/course/course.service.ts";
  var hash = "7cfe2e0b000d15977413210f1ade2e576f72cb72";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ali/exemple-jhipster/testbed/src/main/webapp/app/entities/course/course.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 16
        },
        end: {
          line: 3,
          column: 32
        }
      },
      "2": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 39
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 46
        }
      },
      "4": {
        start: {
          line: 6,
          column: 20
        },
        end: {
          line: 6,
          column: 45
        }
      },
      "5": {
        start: {
          line: 7,
          column: 15
        },
        end: {
          line: 7,
          column: 32
        }
      },
      "6": {
        start: {
          line: 8,
          column: 24
        },
        end: {
          line: 8,
          column: 52
        }
      },
      "7": {
        start: {
          line: 9,
          column: 23
        },
        end: {
          line: 9,
          column: 62
        }
      },
      "8": {
        start: {
          line: 10,
          column: 20
        },
        end: {
          line: 61,
          column: 1
        }
      },
      "9": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 25
        }
      },
      "10": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 74
        }
      },
      "11": {
        start: {
          line: 16,
          column: 21
        },
        end: {
          line: 16,
          column: 55
        }
      },
      "12": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 19,
          column: 77
        }
      },
      "13": {
        start: {
          line: 19,
          column: 43
        },
        end: {
          line: 19,
          column: 74
        }
      },
      "14": {
        start: {
          line: 22,
          column: 21
        },
        end: {
          line: 22,
          column: 55
        }
      },
      "15": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 25,
          column: 77
        }
      },
      "16": {
        start: {
          line: 25,
          column: 43
        },
        end: {
          line: 25,
          column: 74
        }
      },
      "17": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 30,
          column: 77
        }
      },
      "18": {
        start: {
          line: 30,
          column: 43
        },
        end: {
          line: 30,
          column: 74
        }
      },
      "19": {
        start: {
          line: 33,
          column: 24
        },
        end: {
          line: 33,
          column: 63
        }
      },
      "20": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 36,
          column: 82
        }
      },
      "21": {
        start: {
          line: 36,
          column: 43
        },
        end: {
          line: 36,
          column: 79
        }
      },
      "22": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 86
        }
      },
      "23": {
        start: {
          line: 42,
          column: 21
        },
        end: {
          line: 44,
          column: 10
        }
      },
      "24": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 20
        }
      },
      "25": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "26": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 102
        }
      },
      "27": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 19
        }
      },
      "28": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "29": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 57,
          column: 15
        }
      },
      "30": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 100
        }
      },
      "31": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 19
        }
      },
      "32": {
        start: {
          line: 62,
          column: 0
        },
        end: {
          line: 65,
          column: 18
        }
      },
      "33": {
        start: {
          line: 66,
          column: 0
        },
        end: {
          line: 66,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 22
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 19
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 34
          },
          end: {
            line: 19,
            column: 35
          }
        },
        loc: {
          start: {
            line: 19,
            column: 43
          },
          end: {
            line: 19,
            column: 74
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 19
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 25,
            column: 34
          },
          end: {
            line: 25,
            column: 35
          }
        },
        loc: {
          start: {
            line: 25,
            column: 43
          },
          end: {
            line: 25,
            column: 74
          }
        },
        line: 25
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 13
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 27
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 30,
            column: 34
          },
          end: {
            line: 30,
            column: 35
          }
        },
        loc: {
          start: {
            line: 30,
            column: 43
          },
          end: {
            line: 30,
            column: 74
          }
        },
        line: 30
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        loc: {
          start: {
            line: 32,
            column: 15
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 32
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 36,
            column: 34
          },
          end: {
            line: 36,
            column: 35
          }
        },
        loc: {
          start: {
            line: 36,
            column: 43
          },
          end: {
            line: 36,
            column: 79
          }
        },
        line: 36
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        loc: {
          start: {
            line: 38,
            column: 15
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 38
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        loc: {
          start: {
            line: 41,
            column: 34
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 41
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        loc: {
          start: {
            line: 47,
            column: 31
          },
          end: {
            line: 52,
            column: 5
          }
        },
        line: 47
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        loc: {
          start: {
            line: 53,
            column: 36
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 53
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 55,
            column: 29
          },
          end: {
            line: 55,
            column: 30
          }
        },
        loc: {
          start: {
            line: 55,
            column: 41
          },
          end: {
            line: 57,
            column: 13
          }
        },
        line: 55
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 43,
            column: 26
          },
          end: {
            line: 43,
            column: 121
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 43,
            column: 81
          },
          end: {
            line: 43,
            column: 109
          }
        }, {
          start: {
            line: 43,
            column: 112
          },
          end: {
            line: 43,
            column: 121
          }
        }],
        line: 43
      },
      "1": {
        loc: {
          start: {
            line: 43,
            column: 26
          },
          end: {
            line: 43,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 26
          },
          end: {
            line: 43,
            column: 45
          }
        }, {
          start: {
            line: 43,
            column: 49
          },
          end: {
            line: 43,
            column: 78
          }
        }],
        line: 43
      },
      "2": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        }, {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        }],
        line: 48
      },
      "3": {
        loc: {
          start: {
            line: 49,
            column: 36
          },
          end: {
            line: 49,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 49,
            column: 60
          },
          end: {
            line: 49,
            column: 89
          }
        }, {
          start: {
            line: 49,
            column: 92
          },
          end: {
            line: 49,
            column: 101
          }
        }],
        line: 49
      },
      "4": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        }, {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        }],
        line: 54
      },
      "5": {
        loc: {
          start: {
            line: 56,
            column: 38
          },
          end: {
            line: 56,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 56,
            column: 60
          },
          end: {
            line: 56,
            column: 87
          }
        }, {
          start: {
            line: 56,
            column: 90
          },
          end: {
            line: 56,
            column: 99
          }
        }],
        line: 56
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "7cfe2e0b000d15977413210f1ade2e576f72cb72"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

cov_1w4il31che.s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const tslib_1 =
/* istanbul ignore next */
(cov_1w4il31che.s[1]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_1w4il31che.s[2]++, require("@angular/core"));
const http_1 =
/* istanbul ignore next */
(cov_1w4il31che.s[3]++, require("@angular/common/http"));
const operators_1 =
/* istanbul ignore next */
(cov_1w4il31che.s[4]++, require("rxjs/operators"));
const moment =
/* istanbul ignore next */
(cov_1w4il31che.s[5]++, require("moment"));
const app_constants_1 =
/* istanbul ignore next */
(cov_1w4il31che.s[6]++, require("app/app.constants"));
const request_util_1 =
/* istanbul ignore next */
(cov_1w4il31che.s[7]++, require("app/shared/util/request-util"));

/* istanbul ignore next */
cov_1w4il31che.s[8]++;
let CourseService = class CourseService {
  constructor(http) {
    /* istanbul ignore next */
    cov_1w4il31che.f[0]++;
    cov_1w4il31che.s[9]++;
    this.http = http;

    /* istanbul ignore next */
    cov_1w4il31che.s[10]++;
    this.resourceUrl = app_constants_1.SERVER_API_URL + 'api/courses';
  }

  create(course) {
    /* istanbul ignore next */
    cov_1w4il31che.f[1]++;
    const copy =
    /* istanbul ignore next */
    (cov_1w4il31che.s[11]++, this.convertDateFromClient(course));

    /* istanbul ignore next */
    cov_1w4il31che.s[12]++;
    return this.http.post(this.resourceUrl, copy, {
      observe: 'response'
    }).pipe(operators_1.map(res => {
      /* istanbul ignore next */
      cov_1w4il31che.f[2]++;
      cov_1w4il31che.s[13]++;
      return this.convertDateFromServer(res);
    }));
  }

  update(course) {
    /* istanbul ignore next */
    cov_1w4il31che.f[3]++;
    const copy =
    /* istanbul ignore next */
    (cov_1w4il31che.s[14]++, this.convertDateFromClient(course));

    /* istanbul ignore next */
    cov_1w4il31che.s[15]++;
    return this.http.put(this.resourceUrl, copy, {
      observe: 'response'
    }).pipe(operators_1.map(res => {
      /* istanbul ignore next */
      cov_1w4il31che.f[4]++;
      cov_1w4il31che.s[16]++;
      return this.convertDateFromServer(res);
    }));
  }

  find(id) {
    /* istanbul ignore next */
    cov_1w4il31che.f[5]++;
    cov_1w4il31che.s[17]++;
    return this.http.get(`${this.resourceUrl}/${id}`, {
      observe: 'response'
    }).pipe(operators_1.map(res => {
      /* istanbul ignore next */
      cov_1w4il31che.f[6]++;
      cov_1w4il31che.s[18]++;
      return this.convertDateFromServer(res);
    }));
  }

  query(req) {
    /* istanbul ignore next */
    cov_1w4il31che.f[7]++;
    const options =
    /* istanbul ignore next */
    (cov_1w4il31che.s[19]++, request_util_1.createRequestOption(req));

    /* istanbul ignore next */
    cov_1w4il31che.s[20]++;
    return this.http.get(this.resourceUrl, {
      params: options,
      observe: 'response'
    }).pipe(operators_1.map(res => {
      /* istanbul ignore next */
      cov_1w4il31che.f[8]++;
      cov_1w4il31che.s[21]++;
      return this.convertDateArrayFromServer(res);
    }));
  }

  delete(id) {
    /* istanbul ignore next */
    cov_1w4il31che.f[9]++;
    cov_1w4il31che.s[22]++;
    return this.http.delete(`${this.resourceUrl}/${id}`, {
      observe: 'response'
    });
  }

  convertDateFromClient(course) {
    /* istanbul ignore next */
    cov_1w4il31che.f[10]++;
    const copy =
    /* istanbul ignore next */
    (cov_1w4il31che.s[23]++, Object.assign({}, course, {
      deliveryTime:
      /* istanbul ignore next */
      (cov_1w4il31che.b[1][0]++, course.deliveryTime) &&
      /* istanbul ignore next */
      (cov_1w4il31che.b[1][1]++, course.deliveryTime.isValid()) ?
      /* istanbul ignore next */
      (cov_1w4il31che.b[0][0]++, course.deliveryTime.toJSON()) :
      /* istanbul ignore next */
      (cov_1w4il31che.b[0][1]++, undefined)
    }));

    /* istanbul ignore next */
    cov_1w4il31che.s[24]++;
    return copy;
  }

  convertDateFromServer(res) {
    /* istanbul ignore next */
    cov_1w4il31che.f[11]++;
    cov_1w4il31che.s[25]++;

    if (res.body) {
      /* istanbul ignore next */
      cov_1w4il31che.b[2][0]++;
      cov_1w4il31che.s[26]++;
      res.body.deliveryTime = res.body.deliveryTime ?
      /* istanbul ignore next */
      (cov_1w4il31che.b[3][0]++, moment(res.body.deliveryTime)) :
      /* istanbul ignore next */
      (cov_1w4il31che.b[3][1]++, undefined);
    } else
    /* istanbul ignore next */
    {
      cov_1w4il31che.b[2][1]++;
    }

    cov_1w4il31che.s[27]++;
    return res;
  }

  convertDateArrayFromServer(res) {
    /* istanbul ignore next */
    cov_1w4il31che.f[12]++;
    cov_1w4il31che.s[28]++;

    if (res.body) {
      /* istanbul ignore next */
      cov_1w4il31che.b[4][0]++;
      cov_1w4il31che.s[29]++;
      res.body.forEach(course => {
        /* istanbul ignore next */
        cov_1w4il31che.f[13]++;
        cov_1w4il31che.s[30]++;
        course.deliveryTime = course.deliveryTime ?
        /* istanbul ignore next */
        (cov_1w4il31che.b[5][0]++, moment(course.deliveryTime)) :
        /* istanbul ignore next */
        (cov_1w4il31che.b[5][1]++, undefined);
      });
    } else
    /* istanbul ignore next */
    {
      cov_1w4il31che.b[4][1]++;
    }

    cov_1w4il31che.s[31]++;
    return res;
  }

};

/* istanbul ignore next */
cov_1w4il31che.s[32]++;
CourseService = tslib_1.__decorate([core_1.Injectable({
  providedIn: 'root'
}), tslib_1.__metadata("design:paramtypes", [http_1.HttpClient])], CourseService);

/* istanbul ignore next */
cov_1w4il31che.s[33]++;
exports.CourseService = CourseService;