{"file":"/home/ali/exemple-jhipster/testbed/src/main/webapp/app/entities/restaurant/restaurant.component.ts","mappings":";;;AAAA,wCAA6D;AAG7D,6CAA8C;AAC9C,6DAAsD;AAGtD,6DAAyD;AACzD,6FAAuF;AAMvF,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;IAI9B,YAAsB,iBAAoC,EAAY,YAA6B,EAAY,YAAsB;QAA/G,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAY,iBAAY,GAAZ,YAAY,CAAiB;QAAY,iBAAY,GAAZ,YAAY,CAAU;IAAG,CAAC;IAEzI,OAAO;QACL,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC,CAAC,GAAgC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;IACtH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,2BAA2B,EAAE,CAAC;IACrC,CAAC;IAED,WAAW;QACT,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SACjD;IACH,CAAC;IAED,OAAO,CAAC,KAAa,EAAE,IAAiB;QACtC,4EAA4E;QAC5E,OAAO,IAAI,CAAC,EAAG,CAAC;IAClB,CAAC;IAED,2BAA2B;QACzB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,4BAA4B,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IACzG,CAAC;IAED,MAAM,CAAC,UAAuB;QAC5B,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,oEAA+B,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;QAC7G,QAAQ,CAAC,iBAAiB,CAAC,UAAU,GAAG,UAAU,CAAC;IACrD,CAAC;CACF,CAAA;AAlCY,mBAAmB;IAJ/B,gBAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,kBAAa,6BAA6B,CAAA;KAC3C,CAAC;6CAKyC,sCAAiB,EAA0B,6BAAe,EAA0B,uBAAQ;GAJ1H,mBAAmB,CAkC/B;AAlCY,kDAAmB","names":[],"sources":["/home/ali/exemple-jhipster/testbed/src/main/webapp/app/entities/restaurant/restaurant.component.ts"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { Subscription } from 'rxjs';\nimport { JhiEventManager } from 'ng-jhipster';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { IRestaurant } from 'app/shared/model/restaurant.model';\nimport { RestaurantService } from './restaurant.service';\nimport { RestaurantDeleteDialogComponent } from './restaurant-delete-dialog.component';\n\n@Component({\n  selector: 'jhi-restaurant',\n  templateUrl: './restaurant.component.html'\n})\nexport class RestaurantComponent implements OnInit, OnDestroy {\n  restaurants?: IRestaurant[];\n  eventSubscriber?: Subscription;\n\n  constructor(protected restaurantService: RestaurantService, protected eventManager: JhiEventManager, protected modalService: NgbModal) {}\n\n  loadAll(): void {\n    this.restaurantService.query().subscribe((res: HttpResponse<IRestaurant[]>) => (this.restaurants = res.body || []));\n  }\n\n  ngOnInit(): void {\n    this.loadAll();\n    this.registerChangeInRestaurants();\n  }\n\n  ngOnDestroy(): void {\n    if (this.eventSubscriber) {\n      this.eventManager.destroy(this.eventSubscriber);\n    }\n  }\n\n  trackId(index: number, item: IRestaurant): number {\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n    return item.id!;\n  }\n\n  registerChangeInRestaurants(): void {\n    this.eventSubscriber = this.eventManager.subscribe('restaurantListModification', () => this.loadAll());\n  }\n\n  delete(restaurant: IRestaurant): void {\n    const modalRef = this.modalService.open(RestaurantDeleteDialogComponent, { size: 'lg', backdrop: 'static' });\n    modalRef.componentInstance.restaurant = restaurant;\n  }\n}\n"],"version":3}