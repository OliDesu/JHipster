3424a0a9723f4c043d880039a1125266
"use strict";

/* istanbul ignore next */
var cov_pi44menuj = function () {
  var path = "/home/ali/exemple-jhipster/testbed/src/main/webapp/app/core/auth/auth-jwt.service.ts";
  var hash = "56f6596bc4683cbd4f0e4b30c648f0ba9ed09c8b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ali/exemple-jhipster/testbed/src/main/webapp/app/core/auth/auth-jwt.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 16
        },
        end: {
          line: 3,
          column: 32
        }
      },
      "2": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 39
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 46
        }
      },
      "4": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 30
        }
      },
      "5": {
        start: {
          line: 7,
          column: 20
        },
        end: {
          line: 7,
          column: 45
        }
      },
      "6": {
        start: {
          line: 8,
          column: 25
        },
        end: {
          line: 8,
          column: 50
        }
      },
      "7": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 9,
          column: 52
        }
      },
      "8": {
        start: {
          line: 10,
          column: 25
        },
        end: {
          line: 40,
          column: 1
        }
      },
      "9": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 25
        }
      },
      "10": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 43
        }
      },
      "11": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 47
        }
      },
      "12": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 128
        }
      },
      "13": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 22,
          column: 107
        }
      },
      "14": {
        start: {
          line: 22,
          column: 46
        },
        end: {
          line: 22,
          column: 104
        }
      },
      "15": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 29,
          column: 11
        }
      },
      "16": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 60
        }
      },
      "17": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 62
        }
      },
      "18": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 32
        }
      },
      "19": {
        start: {
          line: 32,
          column: 20
        },
        end: {
          line: 32,
          column: 37
        }
      },
      "20": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "21": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 65
        }
      },
      "22": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 67
        }
      },
      "23": {
        start: {
          line: 41,
          column: 0
        },
        end: {
          line: 44,
          column: 23
        }
      },
      "24": {
        start: {
          line: 45,
          column: 0
        },
        end: {
          line: 45,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 54
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 15
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 23
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 22,
            column: 34
          },
          end: {
            line: 22,
            column: 35
          }
        },
        loc: {
          start: {
            line: 22,
            column: 46
          },
          end: {
            line: 22,
            column: 104
          }
        },
        line: 22
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 13
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 24
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 37
          },
          end: {
            line: 25,
            column: 38
          }
        },
        loc: {
          start: {
            line: 25,
            column: 49
          },
          end: {
            line: 29,
            column: 9
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        loc: {
          start: {
            line: 31,
            column: 46
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 31
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 15
          },
          end: {
            line: 17,
            column: 127
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 15
          },
          end: {
            line: 17,
            column: 65
          }
        }, {
          start: {
            line: 17,
            column: 69
          },
          end: {
            line: 17,
            column: 121
          }
        }, {
          start: {
            line: 17,
            column: 125
          },
          end: {
            line: 17,
            column: 127
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        }, {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        }],
        line: 33
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "56f6596bc4683cbd4f0e4b30c648f0ba9ed09c8b"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

cov_pi44menuj.s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const tslib_1 =
/* istanbul ignore next */
(cov_pi44menuj.s[1]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_pi44menuj.s[2]++, require("@angular/core"));
const http_1 =
/* istanbul ignore next */
(cov_pi44menuj.s[3]++, require("@angular/common/http"));
const rxjs_1 =
/* istanbul ignore next */
(cov_pi44menuj.s[4]++, require("rxjs"));
const operators_1 =
/* istanbul ignore next */
(cov_pi44menuj.s[5]++, require("rxjs/operators"));
const ngx_webstorage_1 =
/* istanbul ignore next */
(cov_pi44menuj.s[6]++, require("ngx-webstorage"));
const app_constants_1 =
/* istanbul ignore next */
(cov_pi44menuj.s[7]++, require("app/app.constants"));

/* istanbul ignore next */
cov_pi44menuj.s[8]++;
let AuthServerProvider = class AuthServerProvider {
  constructor(http, $localStorage, $sessionStorage) {
    /* istanbul ignore next */
    cov_pi44menuj.f[0]++;
    cov_pi44menuj.s[9]++;
    this.http = http;

    /* istanbul ignore next */
    cov_pi44menuj.s[10]++;
    this.$localStorage = $localStorage;

    /* istanbul ignore next */
    cov_pi44menuj.s[11]++;
    this.$sessionStorage = $sessionStorage;
  }

  getToken() {
    /* istanbul ignore next */
    cov_pi44menuj.f[1]++;
    cov_pi44menuj.s[12]++;
    return (
      /* istanbul ignore next */
      (cov_pi44menuj.b[0][0]++, this.$localStorage.retrieve('authenticationToken')) ||
      /* istanbul ignore next */
      (cov_pi44menuj.b[0][1]++, this.$sessionStorage.retrieve('authenticationToken')) ||
      /* istanbul ignore next */
      (cov_pi44menuj.b[0][2]++, '')
    );
  }

  login(credentials) {
    /* istanbul ignore next */
    cov_pi44menuj.f[2]++;
    cov_pi44menuj.s[13]++;
    return this.http.post(app_constants_1.SERVER_API_URL + 'api/authenticate', credentials).pipe(operators_1.map(response => {
      /* istanbul ignore next */
      cov_pi44menuj.f[3]++;
      cov_pi44menuj.s[14]++;
      return this.authenticateSuccess(response, credentials.rememberMe);
    }));
  }

  logout() {
    /* istanbul ignore next */
    cov_pi44menuj.f[4]++;
    cov_pi44menuj.s[15]++;
    return new rxjs_1.Observable(observer => {
      /* istanbul ignore next */
      cov_pi44menuj.f[5]++;
      cov_pi44menuj.s[16]++;
      this.$localStorage.clear('authenticationToken');

      /* istanbul ignore next */
      cov_pi44menuj.s[17]++;
      this.$sessionStorage.clear('authenticationToken');

      /* istanbul ignore next */
      cov_pi44menuj.s[18]++;
      observer.complete();
    });
  }

  authenticateSuccess(response, rememberMe) {
    /* istanbul ignore next */
    cov_pi44menuj.f[6]++;
    const jwt =
    /* istanbul ignore next */
    (cov_pi44menuj.s[19]++, response.id_token);

    /* istanbul ignore next */
    cov_pi44menuj.s[20]++;

    if (rememberMe) {
      /* istanbul ignore next */
      cov_pi44menuj.b[1][0]++;
      cov_pi44menuj.s[21]++;
      this.$localStorage.store('authenticationToken', jwt);
    } else {
      /* istanbul ignore next */
      cov_pi44menuj.b[1][1]++;
      cov_pi44menuj.s[22]++;
      this.$sessionStorage.store('authenticationToken', jwt);
    }
  }

};

/* istanbul ignore next */
cov_pi44menuj.s[23]++;
AuthServerProvider = tslib_1.__decorate([core_1.Injectable({
  providedIn: 'root'
}), tslib_1.__metadata("design:paramtypes", [http_1.HttpClient, ngx_webstorage_1.LocalStorageService, ngx_webstorage_1.SessionStorageService])], AuthServerProvider);

/* istanbul ignore next */
cov_pi44menuj.s[24]++;
exports.AuthServerProvider = AuthServerProvider;