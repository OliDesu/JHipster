{"file":"/home/ali/exemple-jhipster/testbed/src/main/webapp/app/admin/metrics/metrics.service.ts","mappings":";;;AAAA,wCAA2C;AAC3C,+CAAkD;AAGlD,qDAAmD;AAQnD,IAAa,cAAc,GAA3B,MAAa,cAAc;IACzB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,UAAU;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,8BAAc,GAAG,uBAAuB,CAAC,CAAC;IAC1E,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,8BAAc,GAAG,uBAAuB,CAAC,CAAC;IAC7E,CAAC;CACF,CAAA;AAVY,cAAc;IAD1B,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;6CAEP,iBAAU;GADzB,cAAc,CAU1B;AAVY,wCAAc","names":[],"sources":["/home/ali/exemple-jhipster/testbed/src/main/webapp/app/admin/metrics/metrics.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { SERVER_API_URL } from 'app/app.constants';\n\nexport type MetricsKey = 'jvm' | 'http.server.requests' | 'cache' | 'services' | 'databases' | 'garbageCollector' | 'processMetrics';\nexport type Metrics = { [key in MetricsKey]: any };\nexport type Thread = any;\nexport type ThreadDump = { threads: Thread[] };\n\n@Injectable({ providedIn: 'root' })\nexport class MetricsService {\n  constructor(private http: HttpClient) {}\n\n  getMetrics(): Observable<Metrics> {\n    return this.http.get<Metrics>(SERVER_API_URL + 'management/jhimetrics');\n  }\n\n  threadDump(): Observable<ThreadDump> {\n    return this.http.get<ThreadDump>(SERVER_API_URL + 'management/threaddump');\n  }\n}\n"],"version":3}