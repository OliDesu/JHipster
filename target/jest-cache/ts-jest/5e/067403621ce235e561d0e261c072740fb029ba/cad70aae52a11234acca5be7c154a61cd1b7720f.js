"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const core_1 = require("@angular/core");
const http_1 = require("@angular/common/http");
const operators_1 = require("rxjs/operators");
const app_constants_1 = require("app/app.constants");
let ConfigurationService = class ConfigurationService {
    constructor(http) {
        this.http = http;
    }
    getBeans() {
        return this.http.get(app_constants_1.SERVER_API_URL + 'management/configprops').pipe(operators_1.map(configProps => Object.values(Object.values(configProps.contexts)
            .map(context => context.beans)
            .reduce((allBeans, contextBeans) => (Object.assign(Object.assign({}, allBeans), contextBeans))))));
    }
    getPropertySources() {
        return this.http.get(app_constants_1.SERVER_API_URL + 'management/env').pipe(operators_1.map(env => env.propertySources));
    }
};
ConfigurationService = tslib_1.__decorate([
    core_1.Injectable({ providedIn: 'root' }),
    tslib_1.__metadata("design:paramtypes", [http_1.HttpClient])
], ConfigurationService);
exports.ConfigurationService = ConfigurationService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL2hvbWUvYWxpL2V4ZW1wbGUtamhpcHN0ZXIvdGVzdGJlZC9zcmMvbWFpbi93ZWJhcHAvYXBwL2FkbWluL2NvbmZpZ3VyYXRpb24vY29uZmlndXJhdGlvbi5zZXJ2aWNlLnRzIiwibWFwcGluZ3MiOiI7OztBQUFBLHdDQUEyQztBQUMzQywrQ0FBa0Q7QUFFbEQsOENBQXFDO0FBRXJDLHFEQUFtRDtBQTRDbkQsSUFBYSxvQkFBb0IsR0FBakMsTUFBYSxvQkFBb0I7SUFDL0IsWUFBb0IsSUFBZ0I7UUFBaEIsU0FBSSxHQUFKLElBQUksQ0FBWTtJQUFHLENBQUM7SUFFeEMsUUFBUTtRQUNOLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQWMsOEJBQWMsR0FBRyx3QkFBd0IsQ0FBQyxDQUFDLElBQUksQ0FDL0UsZUFBRyxDQUFDLFdBQVcsQ0FBQyxFQUFFLENBQ2hCLE1BQU0sQ0FBQyxNQUFNLENBQ1gsTUFBTSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDO2FBQ2hDLEdBQUcsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUM7YUFDN0IsTUFBTSxDQUFDLENBQUMsUUFBZSxFQUFFLFlBQW1CLEVBQUUsRUFBRSxDQUFDLGlDQUFNLFFBQVEsR0FBSyxZQUFZLEVBQUcsQ0FBQyxDQUN4RixDQUNGLENBQ0YsQ0FBQztJQUNKLENBQUM7SUFFRCxrQkFBa0I7UUFDaEIsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBTSw4QkFBYyxHQUFHLGdCQUFnQixDQUFDLENBQUMsSUFBSSxDQUFDLGVBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDO0lBQ3JHLENBQUM7Q0FDRixDQUFBO0FBbEJZLG9CQUFvQjtJQURoQyxpQkFBVSxDQUFDLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxDQUFDOzZDQUVQLGlCQUFVO0dBRHpCLG9CQUFvQixDQWtCaEM7QUFsQlksb0RBQW9CIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9ob21lL2FsaS9leGVtcGxlLWpoaXBzdGVyL3Rlc3RiZWQvc3JjL21haW4vd2ViYXBwL2FwcC9hZG1pbi9jb25maWd1cmF0aW9uL2NvbmZpZ3VyYXRpb24uc2VydmljZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBIdHRwQ2xpZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgbWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5pbXBvcnQgeyBTRVJWRVJfQVBJX1VSTCB9IGZyb20gJ2FwcC9hcHAuY29uc3RhbnRzJztcblxuZXhwb3J0IGludGVyZmFjZSBDb25maWdQcm9wcyB7XG4gIGNvbnRleHRzOiBDb250ZXh0cztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBDb250ZXh0cyB7XG4gIFtrZXk6IHN0cmluZ106IENvbnRleHQ7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29udGV4dCB7XG4gIGJlYW5zOiBCZWFucztcbiAgcGFyZW50SWQ/OiBhbnk7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQmVhbnMge1xuICBba2V5OiBzdHJpbmddOiBCZWFuO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEJlYW4ge1xuICBwcmVmaXg6IHN0cmluZztcbiAgcHJvcGVydGllczogYW55O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEVudiB7XG4gIGFjdGl2ZVByb2ZpbGVzPzogc3RyaW5nW107XG4gIHByb3BlcnR5U291cmNlczogUHJvcGVydHlTb3VyY2VbXTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBQcm9wZXJ0eVNvdXJjZSB7XG4gIG5hbWU6IHN0cmluZztcbiAgcHJvcGVydGllczogUHJvcGVydGllcztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBQcm9wZXJ0aWVzIHtcbiAgW2tleTogc3RyaW5nXTogUHJvcGVydHk7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUHJvcGVydHkge1xuICB2YWx1ZTogc3RyaW5nO1xuICBvcmlnaW4/OiBzdHJpbmc7XG59XG5cbkBJbmplY3RhYmxlKHsgcHJvdmlkZWRJbjogJ3Jvb3QnIH0pXG5leHBvcnQgY2xhc3MgQ29uZmlndXJhdGlvblNlcnZpY2Uge1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGh0dHA6IEh0dHBDbGllbnQpIHt9XG5cbiAgZ2V0QmVhbnMoKTogT2JzZXJ2YWJsZTxCZWFuW10+IHtcbiAgICByZXR1cm4gdGhpcy5odHRwLmdldDxDb25maWdQcm9wcz4oU0VSVkVSX0FQSV9VUkwgKyAnbWFuYWdlbWVudC9jb25maWdwcm9wcycpLnBpcGUoXG4gICAgICBtYXAoY29uZmlnUHJvcHMgPT5cbiAgICAgICAgT2JqZWN0LnZhbHVlcyhcbiAgICAgICAgICBPYmplY3QudmFsdWVzKGNvbmZpZ1Byb3BzLmNvbnRleHRzKVxuICAgICAgICAgICAgLm1hcChjb250ZXh0ID0+IGNvbnRleHQuYmVhbnMpXG4gICAgICAgICAgICAucmVkdWNlKChhbGxCZWFuczogQmVhbnMsIGNvbnRleHRCZWFuczogQmVhbnMpID0+ICh7IC4uLmFsbEJlYW5zLCAuLi5jb250ZXh0QmVhbnMgfSkpXG4gICAgICAgIClcbiAgICAgIClcbiAgICApO1xuICB9XG5cbiAgZ2V0UHJvcGVydHlTb3VyY2VzKCk6IE9ic2VydmFibGU8UHJvcGVydHlTb3VyY2VbXT4ge1xuICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0PEVudj4oU0VSVkVSX0FQSV9VUkwgKyAnbWFuYWdlbWVudC9lbnYnKS5waXBlKG1hcChlbnYgPT4gZW52LnByb3BlcnR5U291cmNlcykpO1xuICB9XG59XG4iXSwidmVyc2lvbiI6M30=